{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport { createAction } from 'typesafe-actions';\nimport { reloadHistory, lastTranslation } from 'utils/setHistory';\nexport const Types = {\n  SET_ARRAY_VIDEOS: '@video/SET_ARRAY_VIDEOS',\n  SET_LAST_TRANSLATOR: '@video/SET_LAST_TRANSLATOR',\n  SET_DOMAIN: '@video/SET_DOMAIN',\n  SET_IS_VIDEO_SCREEN: '@video/SET_IS_VIDEO_SCREEN',\n  SET_TRANSLATION_HISTORIC: '@video/SET_TRANSLATION_HISTORIC',\n  SET_FIRST_ACCESS: '@video/SET_FIRST_ACCESS',\n  SET_PROGRESS: '@video/SET_PROGRESS'\n};\nconst INITIAL_STATE = {\n  current: [],\n  lastTranslate: [],\n  domain: 'Saúde',\n  isVideoScreen: false,\n  translationsHistoric: {},\n  onboardingFirstAccess: true,\n  progressOutput: 0\n};\nexport const Creators = {\n  setCurrentArrayVideo: createAction(Types.SET_ARRAY_VIDEOS)(),\n  setLastTranslator: createAction(Types.SET_LAST_TRANSLATOR)(),\n  setDomain: createAction(Types.SET_DOMAIN)(),\n  setIsVideoScreen: createAction(Types.SET_IS_VIDEO_SCREEN)(),\n  setFirstAccess: createAction(Types.SET_FIRST_ACCESS)(),\n  setProgress: createAction(Types.SET_PROGRESS)()\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  const {\n    payload,\n    type\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case Types.SET_ARRAY_VIDEOS:\n        draft.current = payload;\n        break;\n\n      case Types.SET_LAST_TRANSLATOR:\n        draft.lastTranslate = payload.data; // draft.lastTranslate = ['alo']; //mock\n        // eslint-disable-next-line no-case-declarations\n\n        const {\n          date,\n          data,\n          key\n        } = payload;\n        reloadHistory(date, data, key);\n        lastTranslation(data, key); // mock\n        // if (draft.translationsHistoric[date]) {\n        //   if (draft.translationsHistoric[date][key]) {\n        //     draft.translationsHistoric[date][key].unshift(data)\n        //   } else {\n        //     draft.translationsHistoric[date][key] = []\n        //     draft.translationsHistoric[date][key].unshift(data)\n        //   }\n        // } else {\n        //   draft.translationsHistoric[date] = {}\n        //   draft.translationsHistoric[date][key] = [data]\n        // }\n\n        break;\n\n      case Types.SET_DOMAIN:\n        draft.domain = payload;\n        break;\n\n      case Types.SET_IS_VIDEO_SCREEN:\n        draft.isVideoScreen = payload;\n        break;\n\n      case Types.SET_FIRST_ACCESS:\n        draft.onboardingFirstAccess = payload;\n        break;\n\n      case Types.SET_PROGRESS:\n        draft.progressOutput = payload;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/caionnc/Documents/CC_UFPB/TCC/github-tcc/tcc/src/store/ducks/video.ts"],"names":["produce","createAction","reloadHistory","lastTranslation","Types","SET_ARRAY_VIDEOS","SET_LAST_TRANSLATOR","SET_DOMAIN","SET_IS_VIDEO_SCREEN","SET_TRANSLATION_HISTORIC","SET_FIRST_ACCESS","SET_PROGRESS","INITIAL_STATE","current","lastTranslate","domain","isVideoScreen","translationsHistoric","onboardingFirstAccess","progressOutput","Creators","setCurrentArrayVideo","setLastTranslator","setDomain","setIsVideoScreen","setFirstAccess","setProgress","reducer","state","action","payload","type","draft","data","date","key"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAA+B,OAA/B;AAEA,SAASC,YAAT,QAAyC,kBAAzC;AAEA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,kBAA/C;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,yBADC;AAEnBC,EAAAA,mBAAmB,EAAE,4BAFF;AAGnBC,EAAAA,UAAU,EAAE,mBAHO;AAInBC,EAAAA,mBAAmB,EAAE,4BAJF;AAKnBC,EAAAA,wBAAwB,EAAE,iCALP;AAMnBC,EAAAA,gBAAgB,EAAE,yBANC;AAOnBC,EAAAA,YAAY,EAAE;AAPK,CAAd;AAoBP,MAAMC,aAAyB,GAAG;AAChCC,EAAAA,OAAO,EAAE,EADuB;AAEhCC,EAAAA,aAAa,EAAE,EAFiB;AAGhCC,EAAAA,MAAM,EAAE,OAHwB;AAIhCC,EAAAA,aAAa,EAAE,KAJiB;AAKhCC,EAAAA,oBAAoB,EAAE,EALU;AAMhCC,EAAAA,qBAAqB,EAAE,IANS;AAOhCC,EAAAA,cAAc,EAAE;AAPgB,CAAlC;AAUA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,oBAAoB,EAAEpB,YAAY,CAACG,KAAK,CAACC,gBAAP,CAAZ,EADA;AAEtBiB,EAAAA,iBAAiB,EAAErB,YAAY,CAACG,KAAK,CAACE,mBAAP,CAAZ,EAFG;AAGtBiB,EAAAA,SAAS,EAAEtB,YAAY,CAACG,KAAK,CAACG,UAAP,CAAZ,EAHW;AAItBiB,EAAAA,gBAAgB,EAAEvB,YAAY,CAACG,KAAK,CAACI,mBAAP,CAAZ,EAJI;AAKtBiB,EAAAA,cAAc,EAAExB,YAAY,CAACG,KAAK,CAACM,gBAAP,CAAZ,EALM;AAMtBgB,EAAAA,WAAW,EAAEzB,YAAY,CAACG,KAAK,CAACO,YAAP,CAAZ;AANS,CAAjB;;AAiBP,MAAMgB,OAAyC,GAAG,CAChDC,KAAK,GAAGhB,aADwC,EAEhDiB,MAFgD,KAG7C;AACH,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;AACA,SAAO7B,OAAO,CAAC4B,KAAD,EAASI,KAAD,IAA8B;AAClD,YAAQD,IAAR;AACE,WAAK3B,KAAK,CAACC,gBAAX;AACE2B,QAAAA,KAAK,CAACnB,OAAN,GAAgBiB,OAAhB;AACA;;AACF,WAAK1B,KAAK,CAACE,mBAAX;AACE0B,QAAAA,KAAK,CAAClB,aAAN,GAAsBgB,OAAO,CAACG,IAA9B,CADF,CAEE;AAEA;;AACA,cAAM;AAAEC,UAAAA,IAAF;AAAQD,UAAAA,IAAR;AAAcE,UAAAA;AAAd,YAA8CL,OAApD;AAEA5B,QAAAA,aAAa,CAACgC,IAAD,EAAOD,IAAP,EAAaE,GAAb,CAAb;AACAhC,QAAAA,eAAe,CAAC8B,IAAD,EAAOE,GAAP,CAAf,CARF,CAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACF,WAAK/B,KAAK,CAACG,UAAX;AACEyB,QAAAA,KAAK,CAACjB,MAAN,GAAee,OAAf;AACA;;AACF,WAAK1B,KAAK,CAACI,mBAAX;AACEwB,QAAAA,KAAK,CAAChB,aAAN,GAAsBc,OAAtB;AACA;;AACF,WAAK1B,KAAK,CAACM,gBAAX;AACEsB,QAAAA,KAAK,CAACd,qBAAN,GAA8BY,OAA9B;AACA;;AACF,WAAK1B,KAAK,CAACO,YAAX;AACEqB,QAAAA,KAAK,CAACb,cAAN,GAAuBW,OAAvB;AACA;;AACF;AACE;AAzCJ;AA2CD,GA5Ca,CAAd;AA6CD,CAlDD;;AAoDA,eAAeH,OAAf","sourcesContent":["/* eslint-disable no-param-reassign */\nimport produce, { Draft } from 'immer';\nimport { Reducer } from 'redux';\nimport { createAction, ActionType } from 'typesafe-actions';\n\nimport { reloadHistory, lastTranslation } from 'utils/setHistory';\n\nexport const Types = {\n  SET_ARRAY_VIDEOS: '@video/SET_ARRAY_VIDEOS',\n  SET_LAST_TRANSLATOR: '@video/SET_LAST_TRANSLATOR',\n  SET_DOMAIN: '@video/SET_DOMAIN',\n  SET_IS_VIDEO_SCREEN: '@video/SET_IS_VIDEO_SCREEN',\n  SET_TRANSLATION_HISTORIC: '@video/SET_TRANSLATION_HISTORIC',\n  SET_FIRST_ACCESS: '@video/SET_FIRST_ACCESS',\n  SET_PROGRESS: '@video/SET_PROGRESS'\n};\n\nexport interface VideoState {\n  current: any;\n  lastTranslate: any;\n  translationsHistoric: any;\n  domain: string;\n  isVideoScreen: boolean;\n  onboardingFirstAccess: boolean;\n  progressOutput: number;\n}\n\nconst INITIAL_STATE: VideoState = {\n  current: [],\n  lastTranslate: [],\n  domain: 'Saúde',\n  isVideoScreen: false,\n  translationsHistoric: {},\n  onboardingFirstAccess: true,\n  progressOutput: 0\n};\n\nexport const Creators = {\n  setCurrentArrayVideo: createAction(Types.SET_ARRAY_VIDEOS)<any>(),\n  setLastTranslator: createAction(Types.SET_LAST_TRANSLATOR)<any>(),\n  setDomain: createAction(Types.SET_DOMAIN)<any>(),\n  setIsVideoScreen: createAction(Types.SET_IS_VIDEO_SCREEN)<any>(),\n  setFirstAccess: createAction(Types.SET_FIRST_ACCESS)<any>(),\n  setProgress: createAction(Types.SET_PROGRESS)<any>(),\n};\n\nexport type ActionTypes = ActionType<typeof Creators>;\n\ntype payloadVideoTranslator = {\n  date: string;\n  data: string[];\n  key: string;\n};\n\nconst reducer: Reducer<VideoState, ActionTypes> = (\n  state = INITIAL_STATE,\n  action: ActionTypes,\n) => {\n  const { payload, type } = action;\n  return produce(state, (draft: Draft<VideoState>) => {\n    switch (type) {\n      case Types.SET_ARRAY_VIDEOS:\n        draft.current = payload;\n        break;\n      case Types.SET_LAST_TRANSLATOR:\n        draft.lastTranslate = payload.data;\n        // draft.lastTranslate = ['alo']; //mock\n\n        // eslint-disable-next-line no-case-declarations\n        const { date, data, key }: payloadVideoTranslator = payload;\n\n        reloadHistory(date, data, key);\n        lastTranslation(data, key);\n\n        // mock\n        // if (draft.translationsHistoric[date]) {\n        //   if (draft.translationsHistoric[date][key]) {\n        //     draft.translationsHistoric[date][key].unshift(data)\n        //   } else {\n        //     draft.translationsHistoric[date][key] = []\n        //     draft.translationsHistoric[date][key].unshift(data)\n        //   }\n        // } else {\n        //   draft.translationsHistoric[date] = {}\n        //   draft.translationsHistoric[date][key] = [data]\n        // }\n\n        break;\n      case Types.SET_DOMAIN:\n        draft.domain = payload;\n        break;\n      case Types.SET_IS_VIDEO_SCREEN:\n        draft.isVideoScreen = payload;\n        break;\n      case Types.SET_FIRST_ACCESS:\n        draft.onboardingFirstAccess = payload; \n        break;\n      case Types.SET_PROGRESS:\n        draft.progressOutput = payload; \n        break;  \n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/pages/RecorderArea/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Capacitor } from '@capacitor/core';\nimport { File } from '@ionic-native/file';\nimport { NativeStorage } from '@ionic-native/native-storage';\nimport { VideoCapturePlus } from '@ionic-native/video-capture-plus';\nimport { VideoEditor } from '@ionic-native/video-editor';\nimport { IonContent } from '@ionic/react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { logoCapture, logoHistory, logoTranslate, logoMaos } from 'assets';\nimport { ErrorModal, VideoOutputModal, LoadingModal } from 'components';\nimport paths from 'constants/paths';\nimport { MenuLayout } from 'layouts';\nimport { Creators } from 'store/ducks/video';\nimport { Strings } from './strings';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecorderArea = () => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingDescription, setLoadingDescription] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState([false, '']);\n  const [lastTranslation, setLastTranslation] = useState([]);\n  const dispatch = useDispatch();\n  const currentVideoArray = useSelector(({\n    video\n  }) => video.current);\n  const domain = useSelector(({\n    video\n  }) => video.domain);\n  const promiseLastTranslation = NativeStorage.getItem('lastTranslation').then(data => data, error => {\n    return [];\n  });\n\n  const orderArrayByKey = (arrayOfResults, arrayOfKeys) => {\n    const newResultArray = new Array(arrayOfResults.length);\n    arrayOfKeys.forEach((elem, key) => {\n      newResultArray[elem] = arrayOfResults[key];\n    });\n    return newResultArray;\n  };\n\n  const takeVideoMock = async () => {\n    // mock\n    if (currentVideoArray.length < 5) {\n      dispatch(Creators.setCurrentArrayVideo([[{\n        name: 'opa',\n        size: '123'\n      }, new Blob([]), {\n        thumbBlob: 'https://w7.pngwing.com/pngs/708/19/png-transparent-star-star-angle-triangle-symmetry-thumbnail.png'\n      }, {\n        duration: Math.trunc(5.4)\n      }]]));\n      history.push(paths.SIGNALCAPTURE);\n    }\n  };\n\n  const takeVideo = async () => {\n    try {\n      const options = {\n        limit: 1,\n        duration: 30,\n        highquality: true\n      }; // BackgroundMode.enable();\n\n      const mediafile = await VideoCapturePlus.captureVideo(options); // BackgroundMode.disable();\n\n      setLoadingDescription('Processando...');\n      setLoading(true);\n      let resolvedPath;\n      const media = mediafile[0];\n      const path = media.fullPath.substring(0, media.fullPath.lastIndexOf('/'));\n\n      if (Capacitor.getPlatform() === 'ios') {\n        resolvedPath = await File.resolveDirectoryUrl(`file://${path}`);\n      } else {\n        resolvedPath = await File.resolveDirectoryUrl(path);\n      }\n\n      File.readAsArrayBuffer(resolvedPath.nativeURL, media.name).then(buffer => {\n        const imgBlob = new Blob([buffer], {\n          type: media.type\n        });\n        const fname = `thumb-${currentVideoArray.length}`;\n        const thumbnailoption = {\n          fileUri: resolvedPath.nativeURL + media.name,\n          quality: 100,\n          atTime: 1,\n          outputFileName: fname\n        };\n        VideoEditor.createThumbnail(thumbnailoption).then(async thumbnailPath => {\n          const pathThumbs = thumbnailPath.substring(0, thumbnailPath.lastIndexOf('/'));\n          const resolvedPathThumb = await File.resolveDirectoryUrl(`file://${pathThumbs}`);\n          File.readAsDataURL(resolvedPathThumb.nativeURL, `${fname}.jpg`).then(thumbPath => {\n            VideoEditor.getVideoInfo({\n              fileUri: resolvedPath.nativeURL + media.name\n            }).then(info => {\n              dispatch(Creators.setCurrentArrayVideo([[...mediafile, imgBlob, {\n                thumbBlob: thumbPath\n              }, {\n                duration: Math.trunc(info.duration)\n              }]]));\n              setLoading(false);\n              history.push(paths.SIGNALCAPTURE);\n            }, err => {\n              setLoading(false);\n              setShowErrorModal([true, 'Não foi possível obter informações do vídeo']);\n            });\n          }, error => {\n            setLoading(false);\n            setShowErrorModal([true, 'Não foi possível carregar a prévia do vídeo']);\n          });\n        }).catch(err => {\n          setLoading(false);\n          setShowErrorModal([true, 'Não foi possível criar a prévia do vídeo']);\n        });\n      }, error => {\n        setLoading(false);\n        setShowErrorModal([true, 'Erro ao ler arquivo de vídeo']);\n      });\n    } catch (error) {\n      setLoading(false);\n      if (error.code != 3) setShowErrorModal([true, 'Erro ao abrir câmera']);\n    }\n  };\n\n  const returnError = (networkError, arrayOfErrors, defaultMsg) => {\n    dispatch(Creators.setCurrentArrayVideo([]));\n    if (networkError) setShowErrorModal([true, 'Erro ao se conectar com tradutor']);else if (arrayOfErrors.length != 0) setShowErrorModal([true, `Video ${arrayOfErrors[0].key + 1}: ${arrayOfErrors[0].msg}`]);else {\n      setShowErrorModal([true, defaultMsg]);\n    }\n  };\n\n  const translateVideo = async () => {\n    const arrayOfResults = [];\n    const arrayOfKeys = [];\n    let arrayOfErrors = [];\n    let networkError = false;\n    setLoadingDescription('Traduzindo...');\n    setLoading(true);\n    setShowModal(false);\n    await Promise.all(currentVideoArray.map(async (item, key) => {\n      const form = new FormData();\n      form.append('file', item[1]);\n      const domainParam = domain.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n\n      try {\n        const resultRequest = await axios.post( //'http://127.0.0.1:5000/api/v1/recognition',\n        `http://lavid.nsa.root.sx:3000/api/v1/recognition?domain=${domainParam}`, form, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Accept: 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type'\n          }\n        });\n\n        if (resultRequest.data && resultRequest.data.length > 0) {\n          arrayOfResults.push(resultRequest.data[0].label);\n          arrayOfKeys.push(key);\n        }\n      } catch (e) {\n        if (e.response && e.response.data) {\n          arrayOfErrors.push({\n            key,\n            msg: e.response.data.detail.message\n          });\n        } else {\n          networkError = true;\n          arrayOfErrors.push({\n            key,\n            msg: 'Erro ao enviar vídeo'\n          });\n        }\n      }\n    }));\n    setTimeout(function () {\n      setLoading(false);\n    }, 200);\n    const translatedLabels = orderArrayByKey(arrayOfResults, arrayOfKeys);\n\n    if (translatedLabels.length !== 0) {\n      if (translatedLabels.length === currentVideoArray.length) {\n        const today = new Date();\n        dispatch(Creators.setLastTranslator({\n          data: translatedLabels,\n          date: today.toLocaleDateString('pt-BR'),\n          key: 'video'\n        }));\n        setResults(translatedLabels);\n        setShowModal(true);\n        setLoading(false);\n      } else if (translatedLabels.length < currentVideoArray.length) {\n        setLoading(false);\n        returnError(networkError, arrayOfErrors, 'Não foi possível traduzir todos os vídeos!');\n      }\n    } else {\n      setLoading(false);\n      returnError(networkError, arrayOfErrors, 'Erro ao enviar vídeo, tente novamente!');\n    }\n  };\n\n  const getLastTranslationOnStorage = async () => {\n    setLastTranslation(await promiseLastTranslation);\n  };\n\n  useEffect(() => {\n    if (location.pathname === paths.RECORDERAREA && currentVideoArray.length > 0) {\n      translateVideo();\n    }\n  }, [location]);\n  useEffect(() => {\n    getLastTranslationOnStorage();\n  }, [location, results]);\n\n  const renderOutputs = () => {\n    return lastTranslation.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MenuLayout, {\n    title: Strings.TOOLBAR_TITLE,\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-area-recorder\",\n        children: [lastTranslation.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo-icon\",\n              src: logoMaos,\n              alt: \"Logo M\\xE3os\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: \" Ultima tradu\\xE7\\xE3o \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"main-area-recorder-button-none container-output\",\n            type: \"button\",\n            onClick: () => history.push(paths.HISTORY),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-outputs\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container-outputs\",\n                children: renderOutputs()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoTranslate,\n          className: results.length !== 0 ? 'bg-img bg-opacity' : 'bg-img',\n          alt: \"Logo translate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed-area-recorder\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-recorder\",\n          children: \"Use a c\\xE2mera para gravar novos sinais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recorder-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"area-button-recorder\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: takeVideo,\n              type: \"button\",\n              className: \"main-area-recorder-button-none\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"button-recorder\",\n                src: logoCapture,\n                alt: \"Logo Captura\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" C\\xE2mera \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => history.push(paths.HISTORY),\n            className: \"main-area-recorder-button-none history-recorder\",\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoHistory,\n              alt: \"Logo Hist\\xF3rico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingModal, {\n        loading: loading,\n        setLoading: setLoading,\n        text: loadingDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoOutputModal, {\n        outputs: results,\n        showButtons: true,\n        showModal: showModal,\n        setShowModal: setShowModal,\n        playerIntermedium: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorModal, {\n        show: showErrorModal[0],\n        errorMsg: showErrorModal[1],\n        setShow: setShowErrorModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecorderArea, \"U9bYJRdkY0hh8sfZPtyraJCyd2g=\", false, function () {\n  return [useHistory, useLocation, useDispatch, useSelector, useSelector];\n});\n\n_c = RecorderArea;\nexport default RecorderArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecorderArea\");","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/pages/RecorderArea/index.tsx"],"names":["React","useState","useEffect","Capacitor","File","NativeStorage","VideoCapturePlus","VideoEditor","IonContent","axios","useSelector","useDispatch","useHistory","useLocation","v4","uuidv4","logoCapture","logoHistory","logoTranslate","logoMaos","ErrorModal","VideoOutputModal","LoadingModal","paths","MenuLayout","Creators","Strings","RecorderArea","history","location","results","setResults","loading","setLoading","loadingDescription","setLoadingDescription","showModal","setShowModal","showErrorModal","setShowErrorModal","lastTranslation","setLastTranslation","dispatch","currentVideoArray","video","current","domain","promiseLastTranslation","getItem","then","data","error","orderArrayByKey","arrayOfResults","arrayOfKeys","newResultArray","Array","length","forEach","elem","key","takeVideoMock","setCurrentArrayVideo","name","size","Blob","thumbBlob","duration","Math","trunc","push","SIGNALCAPTURE","takeVideo","options","limit","highquality","mediafile","captureVideo","resolvedPath","media","path","fullPath","substring","lastIndexOf","getPlatform","resolveDirectoryUrl","readAsArrayBuffer","nativeURL","buffer","imgBlob","type","fname","thumbnailoption","fileUri","quality","atTime","outputFileName","createThumbnail","thumbnailPath","pathThumbs","resolvedPathThumb","readAsDataURL","thumbPath","getVideoInfo","info","err","catch","code","returnError","networkError","arrayOfErrors","defaultMsg","msg","translateVideo","Promise","all","map","item","form","FormData","append","domainParam","toLowerCase","normalize","replace","resultRequest","post","headers","Accept","label","e","response","detail","message","setTimeout","translatedLabels","today","Date","setLastTranslator","date","toLocaleDateString","getLastTranslationOnStorage","pathname","RECORDERAREA","renderOutputs","TOOLBAR_TITLE","HISTORY"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BackgroundMode } from '@ionic-native/background-mode';\n\nimport { Capacitor } from '@capacitor/core';\nimport { File, DirectoryEntry } from '@ionic-native/file';\nimport { NativeStorage } from '@ionic-native/native-storage';\nimport { VideoCapturePlus, MediaFile } from '@ionic-native/video-capture-plus';\nimport {\n  CreateThumbnailOptions,\n  VideoEditor,\n} from '@ionic-native/video-editor';\nimport { IonContent } from '@ionic/react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { logoCapture, logoHistory, logoTranslate, logoMaos } from 'assets';\nimport { ErrorModal, VideoOutputModal, LoadingModal } from 'components';\nimport paths from 'constants/paths';\nimport { MenuLayout } from 'layouts';\nimport { RootState } from 'store';\nimport { Creators } from 'store/ducks/video';\n\nimport { Strings } from './strings';\n\nimport './styles.css';\n\nconst RecorderArea = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [results, setResults] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingDescription, setLoadingDescription] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState<[boolean, string]>([\n    false,\n    '',\n  ]);\n  const [lastTranslation, setLastTranslation] = useState<string[]>([]);\n\n  const dispatch = useDispatch();\n  const currentVideoArray = useSelector(\n    ({ video }: RootState) => video.current,\n  );\n\n  const domain = useSelector(({ video }: RootState) => video.domain);\n\n  const promiseLastTranslation: Promise<string[]> = NativeStorage.getItem(\n    'lastTranslation',\n  ).then(\n    (data: string[]) => data,\n    (error: Error) => {\n      return [];\n    },\n  );\n\n  const orderArrayByKey = (\n    arrayOfResults: string[],\n    arrayOfKeys: number[],\n  ): string[] => {\n    const newResultArray = new Array(arrayOfResults.length);\n\n    arrayOfKeys.forEach((elem: number, key: number) => {\n      newResultArray[elem] = arrayOfResults[key];\n    });\n\n    return newResultArray;\n  };\n\n  const takeVideoMock = async () => {\n    // mock\n    if (currentVideoArray.length < 5) {\n      dispatch(\n        Creators.setCurrentArrayVideo([\n          [\n            { name: 'opa', size: '123' },\n            new Blob([]),\n            {\n              thumbBlob:\n                'https://w7.pngwing.com/pngs/708/19/png-transparent-star-star-angle-triangle-symmetry-thumbnail.png',\n            },\n            { duration: Math.trunc(5.4) },\n          ],\n        ]),\n      );\n      history.push(paths.SIGNALCAPTURE);\n    }\n  };\n\n  const takeVideo = async () => {\n    try {\n      const options = { limit: 1, duration: 30, highquality: true };\n\n      // BackgroundMode.enable();\n      const mediafile = await VideoCapturePlus.captureVideo(options);\n      // BackgroundMode.disable();\n\n      setLoadingDescription('Processando...');\n      setLoading(true);\n\n      let resolvedPath: DirectoryEntry;\n      const media = mediafile[0] as MediaFile;\n      const path = media.fullPath.substring(0, media.fullPath.lastIndexOf('/'));\n\n      if (Capacitor.getPlatform() === 'ios') {\n        resolvedPath = await File.resolveDirectoryUrl(`file://${path}`);\n      } else {\n        resolvedPath = await File.resolveDirectoryUrl(path);\n      }\n\n      File.readAsArrayBuffer(resolvedPath.nativeURL, media.name).then(\n        (buffer: any) => {\n          const imgBlob = new Blob([buffer], {\n            type: media.type,\n          });\n\n          const fname = `thumb-${currentVideoArray.length}`;\n\n          const thumbnailoption: CreateThumbnailOptions = {\n            fileUri: resolvedPath.nativeURL + media.name,\n            quality: 100,\n            atTime: 1,\n            outputFileName: fname,\n          };\n\n          VideoEditor.createThumbnail(thumbnailoption)\n            .then(async (thumbnailPath: string) => {\n              const pathThumbs = thumbnailPath.substring(\n                0,\n                thumbnailPath.lastIndexOf('/'),\n              );\n              const resolvedPathThumb: DirectoryEntry =\n                await File.resolveDirectoryUrl(`file://${pathThumbs}`);\n\n              File.readAsDataURL(\n                resolvedPathThumb.nativeURL,\n                `${fname}.jpg`,\n              ).then(\n                (thumbPath: string) => {\n                  VideoEditor.getVideoInfo({\n                    fileUri: resolvedPath.nativeURL + media.name,\n                  }).then(\n                    info => {\n                      dispatch(\n                        Creators.setCurrentArrayVideo([\n                          [\n                            ...mediafile,\n                            imgBlob,\n                            { thumbBlob: thumbPath },\n                            { duration: Math.trunc(info.duration) },\n                          ],\n                        ]),\n                      );\n                      setLoading(false);\n                      history.push(paths.SIGNALCAPTURE);\n                    },\n                    err => {\n                      setLoading(false);\n                      setShowErrorModal([\n                        true,\n                        'Não foi possível obter informações do vídeo',\n                      ]);\n                    },\n                  );\n                },\n                error => {\n                  setLoading(false);\n                  setShowErrorModal([\n                    true,\n                    'Não foi possível carregar a prévia do vídeo',\n                  ]);\n                },\n              );\n            })\n            .catch((err: Error) => {\n              setLoading(false);\n              setShowErrorModal([\n                true,\n                'Não foi possível criar a prévia do vídeo',\n              ]);\n            });\n        },\n        (error: Error) => {\n          setLoading(false);\n          setShowErrorModal([true, 'Erro ao ler arquivo de vídeo']);\n        },\n      );\n    } catch (error: any) {\n      setLoading(false);\n      if (error.code != 3) setShowErrorModal([true, 'Erro ao abrir câmera']);\n    }\n  };\n\n  type ErrorType = {\n    key: number;\n    msg: string;\n  };\n\n  const returnError = (\n    networkError: boolean,\n    arrayOfErrors: ErrorType[],\n    defaultMsg: string,\n  ) => {\n    dispatch(Creators.setCurrentArrayVideo([]));\n\n    if (networkError)\n      setShowErrorModal([true, 'Erro ao se conectar com tradutor']);\n    else if (arrayOfErrors.length != 0)\n      setShowErrorModal([\n        true,\n        `Video ${arrayOfErrors[0].key + 1}: ${arrayOfErrors[0].msg}`,\n      ]);\n    else {\n      setShowErrorModal([true, defaultMsg]);\n    }\n  };\n\n  const translateVideo = async () => {\n    const arrayOfResults: string[] = [];\n    const arrayOfKeys: number[] = [];\n    let arrayOfErrors: ErrorType[] = [];\n    let networkError = false;\n\n    setLoadingDescription('Traduzindo...');\n    setLoading(true);\n    setShowModal(false);\n\n    type ObjectType = 'string' | 'Blob';\n\n    await Promise.all(\n      currentVideoArray.map(async (item: ObjectType, key: number) => {\n        const form = new FormData();\n        form.append('file', item[1]);\n        const domainParam = domain\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '');\n\n        try {\n          const resultRequest = await axios.post(\n            //'http://127.0.0.1:5000/api/v1/recognition',\n            `http://lavid.nsa.root.sx:3000/api/v1/recognition?domain=${domainParam}`,\n            form,\n            {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                Accept: 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Headers': 'Content-Type',\n              },\n            },\n          );\n\n          if (resultRequest.data && resultRequest.data.length > 0) {\n            arrayOfResults.push(resultRequest.data[0].label);\n            arrayOfKeys.push(key);\n          }\n        } catch (e: any) {\n          if (e.response && e.response.data) {\n            arrayOfErrors.push({ key, msg: e.response.data.detail.message });\n          } else {\n            networkError = true;\n            arrayOfErrors.push({ key, msg: 'Erro ao enviar vídeo' });\n          }\n        }\n      }),\n    );\n\n    setTimeout(function () {\n      setLoading(false);\n    }, 200);\n\n    const translatedLabels = orderArrayByKey(arrayOfResults, arrayOfKeys);\n\n    if (translatedLabels.length !== 0) {\n      if (translatedLabels.length === currentVideoArray.length) {\n        const today = new Date();\n        dispatch(\n          Creators.setLastTranslator({\n            data: translatedLabels,\n            date: today.toLocaleDateString('pt-BR'),\n            key: 'video',\n          }),\n        );\n        setResults(translatedLabels);\n        setShowModal(true);\n        setLoading(false);\n      } else if (translatedLabels.length < currentVideoArray.length) {\n        setLoading(false);\n        returnError(\n          networkError,\n          arrayOfErrors,\n          'Não foi possível traduzir todos os vídeos!',\n        );\n      }\n    } else {\n      setLoading(false);\n      returnError(\n        networkError,\n        arrayOfErrors,\n        'Erro ao enviar vídeo, tente novamente!',\n      );\n    }\n  };\n  const getLastTranslationOnStorage = async () => {\n    setLastTranslation(await promiseLastTranslation);\n  };\n\n  useEffect(() => {\n    if (\n      location.pathname === paths.RECORDERAREA &&\n      currentVideoArray.length > 0\n    ) {\n      translateVideo();\n    }\n  }, [location]);\n\n  useEffect(() => {\n    getLastTranslationOnStorage();\n  }, [location, results]);\n\n  const renderOutputs = () => {\n    return lastTranslation.map((item: string) => {\n      return <span key={uuidv4()}>{item}</span>;\n    });\n  };\n\n  return (\n    <MenuLayout title={Strings.TOOLBAR_TITLE}>\n      <IonContent>\n        <div className=\"main-area-recorder\">\n          {lastTranslation.length !== 0 && (\n            <>\n              <div className=\"title-area\">\n                <img className=\"logo-icon\" src={logoMaos} alt=\"Logo Mãos\" />\n                <p className=\"title\"> Ultima tradução </p>\n              </div>\n              <button\n                className=\"main-area-recorder-button-none container-output\"\n                type=\"button\"\n                onClick={() => history.push(paths.HISTORY)}\n              >\n                <div className=\"list-outputs\">\n                  <div className=\"container-outputs\">{renderOutputs()}</div>\n                </div>\n              </button>\n            </>\n          )}\n          <img\n            src={logoTranslate}\n            className={results.length !== 0 ? 'bg-img bg-opacity' : 'bg-img'}\n            alt=\"Logo translate\"\n          />\n        </div>\n        <div className=\"fixed-area-recorder\">\n          <p className=\"title-recorder\">\n            Use a câmera para gravar novos sinais\n          </p>\n          <div className=\"recorder-area\">\n            <div className=\"area-button-recorder\">\n              <button\n                onClick={takeVideo}\n                type=\"button\"\n                className=\"main-area-recorder-button-none\"\n              >\n                <img\n                  className=\"button-recorder\"\n                  src={logoCapture}\n                  alt=\"Logo Captura\"\n                />\n              </button>\n              <p> Câmera </p>\n            </div>\n            <button\n              onClick={() => history.push(paths.HISTORY)}\n              className=\"main-area-recorder-button-none history-recorder\"\n              type=\"button\"\n            >\n              <img src={logoHistory} alt=\"Logo Histórico\" />\n            </button>\n          </div>\n        </div>\n        <LoadingModal\n          loading={loading}\n          setLoading={setLoading}\n          text={loadingDescription}\n        />\n        <VideoOutputModal\n          outputs={results}\n          showButtons\n          showModal={showModal}\n          setShowModal={setShowModal}\n          playerIntermedium={false}\n        />\n        <ErrorModal\n          show={showErrorModal[0]}\n          errorMsg={showErrorModal[1]}\n          setShow={setShowErrorModal}\n        />\n      </IonContent>\n    </MenuLayout>\n  );\n};\n\nexport default RecorderArea;\n"]},"metadata":{},"sourceType":"module"}
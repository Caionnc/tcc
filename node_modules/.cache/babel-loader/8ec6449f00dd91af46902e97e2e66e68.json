{"ast":null,"code":"const dateFormat = date => {\n  const meses = ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro'];\n  const localeDate = new Date().toLocaleDateString('pt-BR');\n  const newDate = new Date();\n  const dateFormatted = new Date(date.split('/').reverse().join('/'));\n  let daysDifference = newDate.getTime() - dateFormatted.getTime();\n  daysDifference = Math.trunc(daysDifference / (1000 * 60 * 60 * 24));\n\n  if (localeDate === date) {\n    return 'Hoje';\n  }\n\n  if (daysDifference <= 7 && newDate.getDay() > dateFormatted.getDay()) {\n    return 'Essa semana';\n  }\n\n  if (dateFormatted.getMonth() === newDate.getMonth() && dateFormatted.getFullYear() === newDate.getFullYear()) {\n    return 'Esse mês';\n  }\n\n  return `${dateFormatted.getDate()} ${meses[dateFormatted.getMonth()]} ${dateFormatted.getFullYear()}`;\n};\n\nexport default dateFormat;","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/utils/dateFormat.ts"],"names":["dateFormat","date","meses","localeDate","Date","toLocaleDateString","newDate","dateFormatted","split","reverse","join","daysDifference","getTime","Math","trunc","getDay","getMonth","getFullYear","getDate"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAD,IAAkB;AACnC,QAAMC,KAAK,GAAG,CACZ,SADY,EAEZ,WAFY,EAGZ,OAHY,EAIZ,OAJY,EAKZ,MALY,EAMZ,OANY,EAOZ,OAPY,EAQZ,QARY,EASZ,UATY,EAUZ,SAVY,EAWZ,UAXY,EAYZ,UAZY,CAAd;AAeA,QAAMC,UAAU,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,CAAnB;AACA,QAAMC,OAAO,GAAG,IAAIF,IAAJ,EAAhB;AACA,QAAMG,aAAa,GAAG,IAAIH,IAAJ,CAASH,IAAI,CAACO,KAAL,CAAW,GAAX,EAAgBC,OAAhB,GAA0BC,IAA1B,CAA+B,GAA/B,CAAT,CAAtB;AAEA,MAAIC,cAAc,GAAGL,OAAO,CAACM,OAAR,KAAoBL,aAAa,CAACK,OAAd,EAAzC;AACAD,EAAAA,cAAc,GAAGE,IAAI,CAACC,KAAL,CAAWH,cAAc,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAzB,CAAjB;;AAEA,MAAIR,UAAU,KAAKF,IAAnB,EAAyB;AACvB,WAAO,MAAP;AACD;;AACD,MAAIU,cAAc,IAAI,CAAlB,IAAuBL,OAAO,CAACS,MAAR,KAAmBR,aAAa,CAACQ,MAAd,EAA9C,EAAsE;AACpE,WAAO,aAAP;AACD;;AACD,MACER,aAAa,CAACS,QAAd,OAA6BV,OAAO,CAACU,QAAR,EAA7B,IACAT,aAAa,CAACU,WAAd,OAAgCX,OAAO,CAACW,WAAR,EAFlC,EAGE;AACA,WAAO,UAAP;AACD;;AACD,SAAQ,GAAEV,aAAa,CAACW,OAAd,EAAwB,IAChChB,KAAK,CAACK,aAAa,CAACS,QAAd,EAAD,CACN,IAAGT,aAAa,CAACU,WAAd,EAA4B,EAFhC;AAGD,CAtCD;;AAwCA,eAAejB,UAAf","sourcesContent":["const dateFormat = (date: string) => {\n  const meses = [\n    'janeiro',\n    'fevereiro',\n    'março',\n    'abril',\n    'maio',\n    'junho',\n    'julho',\n    'agosto',\n    'setembro',\n    'outubro',\n    'novembro',\n    'dezembro',\n  ];\n\n  const localeDate = new Date().toLocaleDateString('pt-BR');\n  const newDate = new Date();\n  const dateFormatted = new Date(date.split('/').reverse().join('/'));\n\n  let daysDifference = newDate.getTime() - dateFormatted.getTime();\n  daysDifference = Math.trunc(daysDifference / (1000 * 60 * 60 * 24));\n\n  if (localeDate === date) {\n    return 'Hoje';\n  }\n  if (daysDifference <= 7 && newDate.getDay() > dateFormatted.getDay()) {\n    return 'Essa semana';\n  }\n  if (\n    dateFormatted.getMonth() === newDate.getMonth() &&\n    dateFormatted.getFullYear() === newDate.getFullYear()\n  ) {\n    return 'Esse mês';\n  }\n  return `${dateFormatted.getDate()} ${\n    meses[dateFormatted.getMonth()]\n  } ${dateFormatted.getFullYear()}`;\n};\n\nexport default dateFormat;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { NativeStorage } from '@ionic-native/native-storage';\nexport const reloadHistory = async (payloadDate, payloadData, key) => {\n  const promiseHistory = NativeStorage.getItem('history').then(data => data, error => {\n    return {};\n  });\n  const resultPromise = await promiseHistory;\n\n  if (resultPromise[payloadDate]) {\n    if (resultPromise[payloadDate][key]) {\n      resultPromise[payloadDate][key].unshift(payloadData);\n    } else {\n      resultPromise[payloadDate][key] = [];\n      resultPromise[payloadDate][key].unshift(payloadData);\n    }\n  } else {\n    resultPromise[payloadDate] = {};\n    resultPromise[payloadDate][key] = [payloadData];\n  }\n\n  NativeStorage.setItem('history', resultPromise).then(() => console.log(NativeStorage.getItem('history')), error => console.error('Error storing item', error));\n};\nexport const lastTranslation = (data, key) => {\n  if (key === 'video') {\n    NativeStorage.setItem('lastTranslation', data).then(() => console.log(NativeStorage.getItem('lastTranslation')), error => console.error('Error storing lastTranslationitem', error));\n  }\n};","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/utils/setHistory.ts"],"names":["NativeStorage","reloadHistory","payloadDate","payloadData","key","promiseHistory","getItem","then","data","error","resultPromise","unshift","setItem","console","log","lastTranslation"],"mappings":"AAAA,SAASA,aAAT,QAA8B,8BAA9B;AAEA,OAAO,MAAMC,aAAa,GAAG,OAC3BC,WAD2B,EAE3BC,WAF2B,EAG3BC,GAH2B,KAIxB;AACH,QAAMC,cAAc,GAAGL,aAAa,CAACM,OAAd,CAAsB,SAAtB,EAAiCC,IAAjC,CACrBC,IAAI,IAAIA,IADa,EAErBC,KAAK,IAAI;AACP,WAAO,EAAP;AACD,GAJoB,CAAvB;AAOA,QAAMC,aAAa,GAAG,MAAML,cAA5B;;AAEA,MAAIK,aAAa,CAACR,WAAD,CAAjB,EAAgC;AAC9B,QAAIQ,aAAa,CAACR,WAAD,CAAb,CAA2BE,GAA3B,CAAJ,EAAqC;AACnCM,MAAAA,aAAa,CAACR,WAAD,CAAb,CAA2BE,GAA3B,EAAgCO,OAAhC,CAAwCR,WAAxC;AACD,KAFD,MAEO;AACLO,MAAAA,aAAa,CAACR,WAAD,CAAb,CAA2BE,GAA3B,IAAkC,EAAlC;AACAM,MAAAA,aAAa,CAACR,WAAD,CAAb,CAA2BE,GAA3B,EAAgCO,OAAhC,CAAwCR,WAAxC;AACD;AACF,GAPD,MAOO;AACLO,IAAAA,aAAa,CAACR,WAAD,CAAb,GAA6B,EAA7B;AACAQ,IAAAA,aAAa,CAACR,WAAD,CAAb,CAA2BE,GAA3B,IAAkC,CAACD,WAAD,CAAlC;AACD;;AAEDH,EAAAA,aAAa,CAACY,OAAd,CAAsB,SAAtB,EAAiCF,aAAjC,EAAgDH,IAAhD,CACE,MAAMM,OAAO,CAACC,GAAR,CAAYd,aAAa,CAACM,OAAd,CAAsB,SAAtB,CAAZ,CADR,EAEEG,KAAK,IAAII,OAAO,CAACJ,KAAR,CAAc,oBAAd,EAAoCA,KAApC,CAFX;AAID,CA9BM;AAgCP,OAAO,MAAMM,eAAe,GAAG,CAACP,IAAD,EAAiBJ,GAAjB,KAAuC;AACpE,MAAIA,GAAG,KAAK,OAAZ,EAAqB;AACnBJ,IAAAA,aAAa,CAACY,OAAd,CAAsB,iBAAtB,EAAyCJ,IAAzC,EAA+CD,IAA/C,CACE,MAAMM,OAAO,CAACC,GAAR,CAAYd,aAAa,CAACM,OAAd,CAAsB,iBAAtB,CAAZ,CADR,EAEEG,KAAK,IAAII,OAAO,CAACJ,KAAR,CAAc,mCAAd,EAAmDA,KAAnD,CAFX;AAID;AACF,CAPM","sourcesContent":["import { NativeStorage } from '@ionic-native/native-storage';\n\nexport const reloadHistory = async (\n  payloadDate: string,\n  payloadData: string[] | string,\n  key: string,\n) => {\n  const promiseHistory = NativeStorage.getItem('history').then(\n    data => data,\n    error => {\n      return {};\n    },\n  );\n\n  const resultPromise = await promiseHistory;\n\n  if (resultPromise[payloadDate]) {\n    if (resultPromise[payloadDate][key]) {\n      resultPromise[payloadDate][key].unshift(payloadData);\n    } else {\n      resultPromise[payloadDate][key] = [];\n      resultPromise[payloadDate][key].unshift(payloadData);\n    }\n  } else {\n    resultPromise[payloadDate] = {};\n    resultPromise[payloadDate][key] = [payloadData];\n  }\n\n  NativeStorage.setItem('history', resultPromise).then(\n    () => console.log(NativeStorage.getItem('history')),\n    error => console.error('Error storing item', error),\n  );\n};\n\nexport const lastTranslation = (data: string[], key: string): void => {\n  if (key === 'video') {\n    NativeStorage.setItem('lastTranslation', data).then(\n      () => console.log(NativeStorage.getItem('lastTranslation')),\n      error => console.error('Error storing lastTranslationitem', error),\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\n\nvar VideoCapturePlusOriginal = function (_super) {\n  __extends(VideoCapturePlusOriginal, _super);\n\n  function VideoCapturePlusOriginal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  VideoCapturePlusOriginal.prototype.captureVideo = function (options) {\n    return cordova(this, \"captureVideo\", {\n      \"callbackOrder\": \"reverse\"\n    }, arguments);\n  };\n\n  VideoCapturePlusOriginal.pluginName = \"VideoCapturePlus\";\n  VideoCapturePlusOriginal.plugin = \"cordova-plugin-video-capture-plus\";\n  VideoCapturePlusOriginal.pluginRef = \"window.plugins.videocaptureplus\";\n  VideoCapturePlusOriginal.repo = \"https://github.com/danielsogl/cordova-plugin-video-capture-plus\";\n  VideoCapturePlusOriginal.platforms = [\"Android\", \"iOS\"];\n  return VideoCapturePlusOriginal;\n}(IonicNativePlugin);\n\nvar VideoCapturePlus = new VideoCapturePlusOriginal();\nexport { VideoCapturePlus };","map":{"version":3,"sources":["../../../../src/@ionic-native/plugins/video-capture-plus/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAO,iBAAP,EAAO,OAAP,QAAmD,oBAAnD;;;AAwIsC,EAAA,SAAA,CAAA,wBAAA,EAAiB,MAAjB,CAAA;;;;;;AASpC,EAAA,wBAAA,CAAA,SAAA,CAAA,YAAA,GAAY,UAAkC,OAAlC,EAAkC;AAAA,WAAA,OAAA,CAAA,IAAA,EAAA,cAAA,EAAA;AAAA,uBAAA;AAAA,KAAA,EAAA,SAAA,CAAA;AAAA,GAA9C;;;;;;;SAlJF,wB;EAyIsC,iB;;IAAzB,gBAAA,GAAA,IAAgB,wBAAhB,E","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\nexport interface MediaFile {\n  /**\n   * The name of the file, without path information.\n   */\n  name: string;\n  /**\n   * The full path of the file, including the name.\n   */\n  fullPath: string;\n  /**\n   * The file's mime type\n   */\n  type: string;\n\n  /**\n   * The date and time when the file was last modified.\n   */\n  lastModifiedDate: Date;\n\n  /**\n   * The size of the file, in bytes.\n   */\n  size: number;\n\n  /**\n   * Retrieves the format information of the media file.\n   * @param {Function} successCallback\n   * @param {Function} [errorCallback]\n   */\n  getFormatData(successCallback: (data: MediaFileData) => any, errorCallback?: (err: any) => any): any;\n}\n\nexport interface MediaFileData {\n  /**\n   * The actual format of the audio and video content.\n   */\n  codecs: string;\n  /**\n   * The average bitrate of the content. The value is zero for images.\n   */\n  bitrate: number;\n  /**\n   * The height of the image or video in pixels. The value is zero for audio clips.\n   */\n  height: number;\n  /**\n   * The width of the image or video in pixels. The value is zero for audio clips.\n   */\n  width: number;\n  /**\n   * The length of the video or sound clip in seconds. The value is zero for images.\n   */\n  duration: number;\n}\n\nexport interface VideoCapturePlusOptions {\n  /**\n   * The number of videos to record, default 1 (on iOS always 1)\n   */\n  limit?: number;\n\n  /**\n   * Max duration in seconds, default 0, which is 'forever'\n   */\n  duration?: number;\n\n  /**\n   * Set to true to override the default low quality setting\n   */\n  highquality?: boolean;\n\n  /**\n   * Set to true to override the default backfacing camera setting.\n   * You'll want to sniff the useragent/device and pass the best overlay based on that.. assuming iphone here\n   */\n  frontcamera?: boolean;\n\n  /**\n   * put the png overlay in your assets folder\n   */\n  portraitOverlay?: string;\n\n  /**\n   *  not passing an overlay means no image is shown for the landscape orientation\n   */\n  landscapeOverlay?: string;\n\n  /**\n   * iOS only\n   */\n  overlayText?: string;\n}\n\n/**\n * @beta\n * @name Video Capture Plus\n * @description\n * This plugin offers some useful extras on top of the default Media Capture Plugin capabilities:\n * - HD recording.\n * - Starting with the front camera.\n * - A custom overlay (currently iOS only).\n *\n * @usage\n * ```typescript\n * import { VideoCapturePlus, VideoCapturePlusOptions, MediaFile } from '@ionic-native/video-capture-plus/ngx';\n *\n *\n * constructor(private videoCapturePlus: VideoCapturePlus) { }\n *\n * ...\n *\n * const options: VideoCapturePlusOptions = {\n *    limit: 1,\n *    highquality: true,\n *    portraitOverlay: 'assets/img/camera/overlay/portrait.png',\n *    landscapeOverlay: 'assets/img/camera/overlay/landscape.png'\n * }\n *\n * this.videoCapturePlus.captureVideo(options).then(mediafile: MediaFile[] => console.log(mediafile), error => console.log('Something went wrong'));\n *\n * ```\n * @interfaces\n * MediaFile\n * MediaFileData\n * VideoCapturePlusOptions\n */\n@Plugin({\n  pluginName: 'VideoCapturePlus',\n  plugin: 'cordova-plugin-video-capture-plus',\n  pluginRef: 'window.plugins.videocaptureplus',\n  repo: 'https://github.com/danielsogl/cordova-plugin-video-capture-plus',\n  platforms: ['Android', 'iOS'],\n})\n@Injectable()\nexport class VideoCapturePlus extends IonicNativePlugin {\n  /**\n   * Starts recordings\n   * @param [options] {VideoCapturePlusOptions} Configure options\n   * @return {Promise<MediaFile[]>}\n   */\n  @Cordova({\n    callbackOrder: 'reverse',\n  })\n  captureVideo(options?: VideoCapturePlusOptions): Promise<MediaFile[]> {\n    return;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
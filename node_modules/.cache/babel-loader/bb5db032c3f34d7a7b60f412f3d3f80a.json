{"ast":null,"code":"var _jsxFileName = \"/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/components/LoadingBar/index.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UNDEFINED_GLOSS = -1;\nconst MAX_PROGRESS = 100;\n\nconst LoadingBar = ({\n  className,\n  progressBarRef,\n  progressContainerRef\n}) => {\n  let glossLen = UNDEFINED_GLOSS;\n  let cache = UNDEFINED_GLOSS;\n\n  window.CounterGloss = (counter, glossLength) => {\n    if (counter === cache - 1) {\n      glossLen = counter;\n    }\n\n    cache = counter;\n    const progress = 1 / glossLen * 100;\n    console.log(progressBarRef.current, className);\n\n    if (progressBarRef.current && progressContainerRef.current) {\n      progressContainerRef.current.style.visibility = 'visible';\n      progressBarRef.current.style.visibility = 'visible';\n      progressBarRef.current.style.width = `${progress > MAX_PROGRESS ? MAX_PROGRESS : progress}%`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: progressContainerRef,\n    className: className.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: progressBarRef,\n      className: className.bar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoadingBar;\nexport default LoadingBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/components/LoadingBar/index.tsx"],"names":["React","UNDEFINED_GLOSS","MAX_PROGRESS","LoadingBar","className","progressBarRef","progressContainerRef","glossLen","cache","window","CounterGloss","counter","glossLength","progress","console","log","current","style","visibility","width","container","bar"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B;;AAQA,MAAMC,eAAe,GAAG,CAAC,CAAzB;AACA,MAAMC,YAAY,GAAG,GAArB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,SADkB;AAElBC,EAAAA,cAFkB;AAGlBC,EAAAA;AAHkB,CAAD,KAII;AACrB,MAAIC,QAAQ,GAAGN,eAAf;AACA,MAAIO,KAAK,GAAGP,eAAZ;;AAEAQ,EAAAA,MAAM,CAACC,YAAP,GAAsB,CAACC,OAAD,EAAkBC,WAAlB,KAA0C;AAC9D,QAAID,OAAO,KAAKH,KAAK,GAAG,CAAxB,EAA2B;AACzBD,MAAAA,QAAQ,GAAGI,OAAX;AACD;;AACDH,IAAAA,KAAK,GAAGG,OAAR;AAEA,UAAME,QAAQ,GAAI,IAAIN,QAAL,GAAiB,GAAlC;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYV,cAAc,CAACW,OAA3B,EAAoCZ,SAApC;;AAEA,QAAIC,cAAc,CAACW,OAAf,IAA0BV,oBAAoB,CAACU,OAAnD,EAA4D;AAC1DV,MAAAA,oBAAoB,CAACU,OAArB,CAA6BC,KAA7B,CAAmCC,UAAnC,GAAgD,SAAhD;AACAb,MAAAA,cAAc,CAACW,OAAf,CAAuBC,KAAvB,CAA6BC,UAA7B,GAA0C,SAA1C;AACAb,MAAAA,cAAc,CAACW,OAAf,CAAuBC,KAAvB,CAA6BE,KAA7B,GAAsC,GACpCN,QAAQ,GAAGX,YAAX,GAA0BA,YAA1B,GAAyCW,QAC1C,GAFD;AAGD;AACF,GAjBD;;AAmBA,sBACE;AAAK,IAAA,GAAG,EAAEP,oBAAV;AAAgC,IAAA,SAAS,EAAEF,SAAS,CAACgB,SAArD;AAAA,2BACE;AAAK,MAAA,GAAG,EAAEf,cAAV;AAA0B,MAAA,SAAS,EAAED,SAAS,CAACiB;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;KAAMlB,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, { useRef } from 'react';\n\ninterface loadingBarProps {\n  className: any;\n  progressBarRef: any;\n  progressContainerRef: any;\n}\n\nconst UNDEFINED_GLOSS = -1;\nconst MAX_PROGRESS = 100;\n\nconst LoadingBar = ({\n  className,\n  progressBarRef,\n  progressContainerRef,\n}: loadingBarProps) => {\n  let glossLen = UNDEFINED_GLOSS;\n  let cache = UNDEFINED_GLOSS;\n\n  window.CounterGloss = (counter: number, glossLength: number) => {\n    if (counter === cache - 1) {\n      glossLen = counter;\n    }\n    cache = counter;\n\n    const progress = (1 / glossLen) * 100;\n\n    console.log(progressBarRef.current, className);\n\n    if (progressBarRef.current && progressContainerRef.current) {\n      progressContainerRef.current.style.visibility = 'visible';\n      progressBarRef.current.style.visibility = 'visible';\n      progressBarRef.current.style.width = `${\n        progress > MAX_PROGRESS ? MAX_PROGRESS : progress\n      }%`;\n    }\n  };\n\n  return (\n    <div ref={progressContainerRef} className={className.container}>\n      <div ref={progressBarRef} className={className.bar} />\n    </div>\n  );\n};\n\nexport default LoadingBar;\n"]},"metadata":{},"sourceType":"module"}
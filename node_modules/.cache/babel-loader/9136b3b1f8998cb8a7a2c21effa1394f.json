{"ast":null,"code":"var _jsxFileName = \"/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/components/VideoOutputModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { IonModal, IonButton } from '@ionic/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Unity, { UnityContent } from 'react-unity-webgl';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IconCloseCircle, IconCamera, IconEdit, IconPlay } from 'assets';\nimport paths from 'constants/paths';\nimport { Creators } from 'store/ducks/video';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DICTIONAY_URL = 'https://dicionario2.vlibras.gov.br/2018.3.1/WEBGL/';\nconst PLAYER_MANAGER = 'PlayerManager';\nconst unityContent = new UnityContent('BUILD/Build/BUILD.json', 'BUILD/Build/UnityLoader.js', {\n  adjustOnWindowResize: true\n});\n\nconst VideoOutputModal = ({\n  outputs,\n  showButtons,\n  setShowModal,\n  showModal,\n  playerIntermedium\n}) => {\n  _s();\n\n  const [openPlayer, setOpenPlayer] = useState(playerIntermedium);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const progressBarOutputRef = useRef(null);\n  const progressContainerOutputRef = useRef(null);\n  const MAX_PROGRESS = 100;\n  const UNDEFINED_GLOSS = -1;\n  let cache = UNDEFINED_GLOSS;\n  let glossLen = UNDEFINED_GLOSS;\n  const progressOutput = useSelector(({\n    video\n  }) => video.progressOutput);\n\n  const closeModal = () => {\n    setShowModal(false);\n    dispatch(Creators.setCurrentArrayVideo([]));\n\n    if (location.pathname === paths.RECORDERAREA) {\n      setOpenPlayer(false);\n    }\n  };\n\n  const progressHandle = () => {\n    if (progressContainerOutputRef.current) {\n      progressContainerOutputRef.current.style.visibility = 'visible';\n    }\n  };\n\n  const cleanProgress = () => {\n    if (progressBarOutputRef.current && progressContainerOutputRef.current) {\n      progressContainerOutputRef.current.style.visibility = 'hidden';\n      progressBarOutputRef.current.style.visibility = 'hidden';\n      progressBarOutputRef.current.style.width = '0%';\n    }\n  };\n\n  const playWord = value => {\n    if (openPlayer) {\n      cleanProgress();\n      progressHandle();\n      unityContent.send(PLAYER_MANAGER, 'playNow', value);\n    }\n  };\n\n  const renderOutputs = () => {\n    return outputs.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => playWord(item),\n      type: \"button\",\n      children: item\n    }, uuidv4(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this));\n  };\n\n  window.onLoadPlayer = () => {\n    // alert('ONLOAD');\n    cleanProgress();\n    unityContent.send(PLAYER_MANAGER, 'initRandomAnimationsProcess');\n    unityContent.send(PLAYER_MANAGER, 'setURL', '');\n    unityContent.send(PLAYER_MANAGER, 'setBaseUrl', DICTIONAY_URL);\n    unityContent.send(PLAYER_MANAGER, 'playNow', outputs.join(' '));\n    unityContent.send(PLAYER_MANAGER, 'setSubtitlesState', 0);\n  };\n\n  useEffect(() => {\n    if (showModal) {\n      cleanProgress();\n    } else {\n      unityContent.send(PLAYER_MANAGER, 'stopAll');\n    }\n  }, [outputs, showModal]); // window.CounterGloss = (counter: number, glossLength: number) => {\n  //   if (counter === cache - 1) {\n  //     glossLen = counter;\n  //   }\n  //   cache = counter;\n  //   console.log(window);\n  //   const progress = (1 / glossLen) * 100;\n  //   console.log(progress);\n  //   if (progressBarOutputRef.current && progressContainerOutputRef.current) {\n  //     progressContainerOutputRef.current.style.visibility = 'visible';\n  //     progressBarOutputRef.current.style.visibility = 'visible';\n  //     progressBarOutputRef.current.style.width = `${\n  //       progress > MAX_PROGRESS ? MAX_PROGRESS : progress\n  //     }%`;\n  //   }\n  // };\n\n  useEffect(() => {\n    if (progressBarOutputRef.current && progressContainerOutputRef.current) {\n      progressContainerOutputRef.current.style.visibility = 'visible';\n      progressBarOutputRef.current.style.visibility = 'visible';\n      progressBarOutputRef.current.style.width = `${progressOutput > MAX_PROGRESS ? MAX_PROGRESS : progressOutput}%`;\n    }\n  }, [progressOutput]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IonModal, {\n      isOpen: showModal,\n      cssClass: `videooutput-modal${openPlayer ? ' player' : ''}${!showButtons ? ' buttons-off' : ''}`,\n      swipeToClose: true,\n      onDidDismiss: closeModal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Resultado tradu\\xE7\\xE3o \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), !openPlayer ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"videooutput-modal-button-none\",\n          onClick: () => setOpenPlayer(true),\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(IconPlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"videooutput-modal-button-none\",\n          onClick: closeModal,\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(IconCloseCircle, {\n            color: \"#1447A6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-outputs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-outputs\",\n          children: renderOutputs()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), openPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(Unity, {\n          unityContent: unityContent,\n          className: \"player-video-output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: progressContainerOutputRef,\n          className: \"player-progress-container-video\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: progressBarOutputRef,\n            className: \"player-progress-bar-video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), showButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(IonButton, {\n          className: \"answer-button\",\n          onClick: () => {\n            setShowModal(false);\n            history.push(paths.TRANSLATOR);\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), \"Responder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IonButton, {\n          className: \"newsign-button\",\n          onClick: closeModal,\n          children: [/*#__PURE__*/_jsxDEV(IconCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), \" Novo Sinal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(VideoOutputModal, \"J+ePK1YXFRbkE66Lmm8l0aTA5Mw=\", false, function () {\n  return [useDispatch, useHistory, useLocation, useSelector];\n});\n\n_c = VideoOutputModal;\nexport default VideoOutputModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoOutputModal\");","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/components/VideoOutputModal/index.tsx"],"names":["React","useRef","useEffect","useState","IonModal","IonButton","useDispatch","useSelector","useHistory","useLocation","Unity","UnityContent","v4","uuidv4","IconCloseCircle","IconCamera","IconEdit","IconPlay","paths","Creators","DICTIONAY_URL","PLAYER_MANAGER","unityContent","adjustOnWindowResize","VideoOutputModal","outputs","showButtons","setShowModal","showModal","playerIntermedium","openPlayer","setOpenPlayer","dispatch","history","location","progressBarOutputRef","progressContainerOutputRef","MAX_PROGRESS","UNDEFINED_GLOSS","cache","glossLen","progressOutput","video","closeModal","setCurrentArrayVideo","pathname","RECORDERAREA","progressHandle","current","style","visibility","cleanProgress","width","playWord","value","send","renderOutputs","map","item","window","onLoadPlayer","join","push","TRANSLATOR"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { IonModal, IonButton } from '@ionic/react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Unity, { UnityContent } from 'react-unity-webgl';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { IconCloseCircle, IconCamera, IconEdit, IconPlay } from 'assets';\nimport paths from 'constants/paths';\nimport { Creators } from 'store/ducks/video';\nimport './styles.css';\nimport { RootState } from 'store';\n\nconst DICTIONAY_URL = 'https://dicionario2.vlibras.gov.br/2018.3.1/WEBGL/';\nconst PLAYER_MANAGER = 'PlayerManager';\n\ninterface VideoOutputModalProps {\n  outputs: string[];\n  showButtons: boolean;\n  showModal: boolean;\n  setShowModal: Dispatch<SetStateAction<boolean>>;\n  playerIntermedium: boolean;\n}\n\nconst unityContent = new UnityContent(\n  'BUILD/Build/BUILD.json',\n  'BUILD/Build/UnityLoader.js',\n  {\n    adjustOnWindowResize: true,\n  },\n);\n\nconst VideoOutputModal = ({\n  outputs,\n  showButtons,\n  setShowModal,\n  showModal,\n  playerIntermedium,\n}: VideoOutputModalProps) => {\n  const [openPlayer, setOpenPlayer] = useState(playerIntermedium);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  const progressBarOutputRef = useRef<HTMLDivElement>(null);\n  const progressContainerOutputRef = useRef<HTMLDivElement>(null);\n\n  const MAX_PROGRESS = 100;\n  const UNDEFINED_GLOSS = -1;\n\n  let cache = UNDEFINED_GLOSS;\n  let glossLen = UNDEFINED_GLOSS;\n\n  const progressOutput = useSelector(\n    ({ video }: RootState) => video.progressOutput,\n  );\n\n  const closeModal = () => {\n    setShowModal(false);\n    dispatch(Creators.setCurrentArrayVideo([]));\n\n    if (location.pathname === paths.RECORDERAREA) {\n      setOpenPlayer(false);\n    }\n  };\n\n  const progressHandle = (): void => {\n    if (progressContainerOutputRef.current) {\n      progressContainerOutputRef.current.style.visibility = 'visible';\n    }\n  };\n\n  const cleanProgress = (): void => {\n    if (progressBarOutputRef.current && progressContainerOutputRef.current) {\n      progressContainerOutputRef.current.style.visibility = 'hidden';\n      progressBarOutputRef.current.style.visibility = 'hidden';\n      progressBarOutputRef.current.style.width = '0%';\n    }\n  };\n\n  const playWord = (value: string) => {\n    if (openPlayer) {\n      cleanProgress();\n      progressHandle();\n      unityContent.send(PLAYER_MANAGER, 'playNow', value);\n    }\n  };\n\n  const renderOutputs = () => {\n    return outputs.map((item: string) => (\n      <button onClick={() => playWord(item)} key={uuidv4()} type=\"button\">\n        {item}\n      </button>\n    ));\n  };\n\n  (window as any).onLoadPlayer = () => {\n    // alert('ONLOAD');\n\n    cleanProgress();\n    unityContent.send(PLAYER_MANAGER, 'initRandomAnimationsProcess');\n    unityContent.send(PLAYER_MANAGER, 'setURL', '');\n    unityContent.send(PLAYER_MANAGER, 'setBaseUrl', DICTIONAY_URL);\n    unityContent.send(PLAYER_MANAGER, 'playNow', outputs.join(' '));\n    unityContent.send(PLAYER_MANAGER, 'setSubtitlesState', 0);\n  };\n\n  useEffect(() => {\n    if (showModal) {\n      cleanProgress();\n    } else {\n      unityContent.send(PLAYER_MANAGER, 'stopAll');\n    }\n  }, [outputs, showModal]);\n\n  // window.CounterGloss = (counter: number, glossLength: number) => {\n  //   if (counter === cache - 1) {\n  //     glossLen = counter;\n  //   }\n  //   cache = counter;\n\n  //   console.log(window);\n\n  //   const progress = (1 / glossLen) * 100;\n  //   console.log(progress);\n  //   if (progressBarOutputRef.current && progressContainerOutputRef.current) {\n  //     progressContainerOutputRef.current.style.visibility = 'visible';\n  //     progressBarOutputRef.current.style.visibility = 'visible';\n  //     progressBarOutputRef.current.style.width = `${\n  //       progress > MAX_PROGRESS ? MAX_PROGRESS : progress\n  //     }%`;\n  //   }\n  // };\n\n  useEffect(() => {\n    if (progressBarOutputRef.current && progressContainerOutputRef.current) {\n      progressContainerOutputRef.current.style.visibility = 'visible';\n      progressBarOutputRef.current.style.visibility = 'visible';\n      progressBarOutputRef.current.style.width = `${\n        progressOutput > MAX_PROGRESS ? MAX_PROGRESS : progressOutput\n      }%`;\n    }\n  }, [progressOutput]);\n\n  return (\n    <>\n      <IonModal\n        isOpen={showModal}\n        cssClass={`videooutput-modal${openPlayer ? ' player' : ''}${\n          !showButtons ? ' buttons-off' : ''\n        }`}\n        swipeToClose\n        onDidDismiss={closeModal}\n      >\n        <div className=\"modal-title\">\n          <span> Resultado tradução </span>\n          {!openPlayer ? (\n            <button\n              className=\"videooutput-modal-button-none\"\n              onClick={() => setOpenPlayer(true)}\n              type=\"button\"\n            >\n              <IconPlay />\n            </button>\n          ) : (\n            <button\n              className=\"videooutput-modal-button-none\"\n              onClick={closeModal}\n              type=\"button\"\n            >\n              <IconCloseCircle color=\"#1447A6\" />\n            </button>\n          )}\n        </div>\n        <div className=\"list-outputs\">\n          <div className=\"container-outputs\">{renderOutputs()}</div>\n        </div>\n        {openPlayer && (\n          <div className=\"player\">\n            <Unity\n              unityContent={unityContent}\n              className=\"player-video-output\"\n            />\n            <div\n              ref={progressContainerOutputRef}\n              className=\"player-progress-container-video\"\n            >\n              <div\n                ref={progressBarOutputRef}\n                className=\"player-progress-bar-video\"\n              />\n            </div>\n          </div>\n        )}\n        {showButtons && (\n          <div className=\"list-buttons\">\n            <IonButton\n              className=\"answer-button\"\n              onClick={() => {\n                setShowModal(false);\n                history.push(paths.TRANSLATOR);\n              }}\n            >\n              <IconEdit />\n              Responder\n            </IonButton>\n            <IonButton className=\"newsign-button\" onClick={closeModal}>\n              <IconCamera /> Novo Sinal\n            </IonButton>\n          </div>\n        )}\n      </IonModal>\n    </>\n  );\n};\n\nexport default VideoOutputModal;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/caionnc/Documents/CC_UFPB/TCC/github-tcc/tcc/src/pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IonContent, IonList, IonText, IonButton, IonFooter } from '@ionic/react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport paths from 'constants/paths';\nimport { MenuLayout } from 'layouts';\nimport PlayerService from 'services/unity';\nimport { Strings } from './strings';\nimport './styles.css';\nimport { Medication } from 'components';\nimport { logoAddPillIconAllBlue } from 'assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playerService = PlayerService.getService();\n\nfunction HomePage() {\n  _s();\n\n  const [searchText, setSearchText] = useState('');\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const history = useHistory(); //Medication Modal\n  //const [showModal, setShowModal] = useState(false);\n  //Medication List state\n\n  const [medicationList, setMedicationList] = useState([]);\n  const [medicationName, setMedicationName] = useState('');\n  const [medicationQuantity, setMedicationQuantity] = useState(0);\n  const [medicationPeriod, setMedicationPeriod] = useState('');\n  const [medicationDosage, setMedicationDosage] = useState(0);\n  const [medicationListTest, setMedicationListTest] = useState([]);\n  const [medicationNameTest, setMedicationNameTest] = useState('');\n  const [medicationQuantityTest, setMedicationQuantityTest] = useState(0);\n  const [medicationPeriodTest, setMedicationPeriodTest] = useState('');\n  const [medicationDosageTest, setMedicationDosageTest] = useState(0);\n  const testMedication = {\n    name: medicationNameTest,\n    quantity: medicationQuantityTest,\n    period: medicationPeriodTest,\n    dosage: medicationDosageTest\n  };\n\n  const addMedication = () => {\n    const newMedication = {\n      name: medicationName,\n      quantity: medicationQuantity,\n      period: medicationPeriod,\n      dosage: medicationDosage\n    };\n    setMedicationName('');\n    setMedicationQuantity(0);\n    setMedicationPeriod('');\n    setMedicationDosage(0);\n    setMedicationList([...medicationList, newMedication]);\n    console.log(medicationList);\n  };\n\n  const deleteMedication = medicationToBeDeleted => {\n    setMedicationList(medicationList.filter(medication => {\n      return medication.name !== medicationToBeDeleted;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MenuLayout, {\n    title: Strings.TOOLBAR_TITLE,\n    mode: location.pathname === paths.DICTIONARY ? 'menu' : 'menu',\n    children: [/*#__PURE__*/_jsxDEV(IonContent, {\n      class: \"home-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-content\",\n        children: [/*#__PURE__*/_jsxDEV(IonText, {\n          class: \"home-content-title\",\n          children: \"Medicamentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Medication, {\n          medication: (testMedication.name, testMedication.quantity, testMedication.dosage, testMedication.period),\n          deleteMedication: deleteMedication\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonList, {\n          class: \"home-medication-list\",\n          children: medicationList.map((item, key) => /*#__PURE__*/_jsxDEV(Medication, {\n            medication: item,\n            deleteMedication: deleteMedication\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"home-add-medicine-button\",\n      onClick: addMedication,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoAddPillIconAllBlue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonFooter, {\n      class: \"home-bottom-container\",\n      children: /*#__PURE__*/_jsxDEV(IonButton, {\n        onClick: () => console.log('Traduzir bundle'),\n        children: \"Traduzir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"aQb81I/vZ+jU8xi56fjPeqymDKY=\", false, function () {\n  return [useLocation, useDispatch, useHistory];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/caionnc/Documents/CC_UFPB/TCC/github-tcc/tcc/src/pages/Home/index.tsx"],"names":["React","useState","IonContent","IonList","IonText","IonButton","IonFooter","useDispatch","useHistory","useLocation","paths","MenuLayout","PlayerService","Strings","Medication","logoAddPillIconAllBlue","playerService","getService","HomePage","searchText","setSearchText","location","dispatch","history","medicationList","setMedicationList","medicationName","setMedicationName","medicationQuantity","setMedicationQuantity","medicationPeriod","setMedicationPeriod","medicationDosage","setMedicationDosage","medicationListTest","setMedicationListTest","medicationNameTest","setMedicationNameTest","medicationQuantityTest","setMedicationQuantityTest","medicationPeriodTest","setMedicationPeriodTest","medicationDosageTest","setMedicationDosageTest","testMedication","name","quantity","period","dosage","addMedication","newMedication","console","log","deleteMedication","medicationToBeDeleted","filter","medication","TOOLBAR_TITLE","pathname","DICTIONARY","map","item","key"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport {\n  IonChip,\n  IonContent,\n  IonItem,\n  IonList,\n  IonSearchbar,\n  IonText,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonIcon,\n  IonImg,\n  IonBackButton,\n  IonButton,\n  IonFooter,\n} from '@ionic/react';\nimport { debounce } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\n\nimport {\n  FIRST_PAGE_INDEX,\n  MAX_PER_PAGE,\n  PAGE_STEP_SIZE,\n} from 'constants/pagination';\nimport paths from 'constants/paths';\nimport { PlayerKeys } from 'constants/player';\nimport { useTranslation } from 'hooks/Translation';\nimport { MenuLayout } from 'layouts';\nimport { Words } from 'models/dictionary';\nimport PlayerService from 'services/unity';\nimport { RootState } from 'store';\nimport { Creators } from 'store/ducks/dictionary';\n\nimport { Strings } from './strings';\n\nimport './styles.css';\nimport { Medication } from 'components';\nimport { logoAddPillIconAllBlue } from 'assets';\n\nconst playerService = PlayerService.getService();\n\nexport interface IMedication {\n  name: any;\n  quantity: any;\n  period: any;\n  dosage: any;\n}\n\nfunction HomePage() {\n  const [searchText, setSearchText] = useState('');\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  //Medication Modal\n  //const [showModal, setShowModal] = useState(false);\n\n  //Medication List state\n  const [medicationList, setMedicationList] = useState<IMedication[]>([]);\n  const [medicationName, setMedicationName] = useState<any>('');\n  const [medicationQuantity, setMedicationQuantity] = useState<any>(0);\n  const [medicationPeriod, setMedicationPeriod] = useState<any>('');\n  const [medicationDosage, setMedicationDosage] = useState<any>(0);\n\n  const [medicationListTest, setMedicationListTest] = useState<IMedication[]>(\n    [],\n  );\n  const [medicationNameTest, setMedicationNameTest] = useState<any>('');\n  const [medicationQuantityTest, setMedicationQuantityTest] = useState<any>(0);\n  const [medicationPeriodTest, setMedicationPeriodTest] = useState<any>('');\n  const [medicationDosageTest, setMedicationDosageTest] = useState<any>(0);\n\n  const testMedication = {\n    name: medicationNameTest,\n    quantity: medicationQuantityTest,\n    period: medicationPeriodTest,\n    dosage: medicationDosageTest,\n  };\n\n  const addMedication = (): void => {\n    const newMedication = {\n      name: medicationName,\n      quantity: medicationQuantity,\n      period: medicationPeriod,\n      dosage: medicationDosage,\n    };\n\n    setMedicationName('');\n    setMedicationQuantity(0);\n    setMedicationPeriod('');\n    setMedicationDosage(0);\n    setMedicationList([...medicationList, newMedication]);\n\n    console.log(medicationList);\n  };\n\n  const deleteMedication = (medicationToBeDeleted: any): void => {\n    setMedicationList(\n      medicationList.filter(medication => {\n        return medication.name !== medicationToBeDeleted;\n      }),\n    );\n  };\n\n  return (\n    <MenuLayout\n      title={Strings.TOOLBAR_TITLE}\n      mode={location.pathname === paths.DICTIONARY ? 'menu' : 'menu'}\n    >\n      <IonContent class=\"home-container\">\n        <div className=\"home-content\">\n          <IonText class=\"home-content-title\">Medicamentos</IonText>\n          <Medication\n            medication={\n              (testMedication.name,\n              testMedication.quantity,\n              testMedication.dosage,\n              testMedication.period)\n            }\n            deleteMedication={deleteMedication}\n          ></Medication>\n          <IonList class=\"home-medication-list\">\n            {medicationList.map((item: IMedication, key: number) => (\n              <Medication\n                key={key}\n                medication={item}\n                deleteMedication={deleteMedication}\n              ></Medication>\n            ))}\n          </IonList>\n        </div>\n      </IonContent>\n      <button className=\"home-add-medicine-button\" onClick={addMedication}>\n        <img src={logoAddPillIconAllBlue}></img>\n      </button>\n      <IonFooter class=\"home-bottom-container\">\n        <IonButton onClick={() => console.log('Traduzir bundle')}>\n          Traduzir\n        </IonButton>\n      </IonFooter>\n    </MenuLayout>\n  );\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}
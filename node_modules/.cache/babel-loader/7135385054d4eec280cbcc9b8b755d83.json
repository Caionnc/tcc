{"ast":null,"code":"var _jsxFileName = \"/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/components/RevisionModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { IonModal, IonText, IonChip, IonTextarea } from '@ionic/react';\nimport { debounce } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IconCloseCircle } from 'assets';\nimport SuggestionFeedbackModal from 'components/SuggestionFeedbackModal';\nimport { FIRST_PAGE_INDEX } from 'constants/pagination';\nimport { PlayerKeys } from 'constants/player';\nimport { useTranslation } from 'hooks/Translation';\nimport { sendReview } from 'services/suggestionGloss';\nimport PlayerService from 'services/unity';\nimport { Creators as CreatorsDictionary } from 'store/ducks/dictionary';\nimport { Strings } from './strings';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playerService = PlayerService.getService();\nconst TIME_DEBOUNCE_MS = 1000;\n\nconst RevisionModal = ({\n  show,\n  setShow,\n  showSuggestionFeedbackModal,\n  setSuggestionFeedbackModal,\n  isPlaying\n}) => {\n  _s();\n\n  const {\n    textPtBr,\n    textGloss,\n    setTextGloss\n  } = useTranslation(); // Aux var for the TextArea value\n\n  const [auxValueText, setAuxValueText] = useState(textGloss);\n  const [isPreview, setIsPreview] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleCloseModal = () => {\n    setShow(false);\n    setIsPreview(false);\n    setAuxValueText('');\n  };\n\n  const handlePlaySuggestionGlosa = () => {\n    setShow(false); // setTextGloss(auxValueText, false);\n\n    playerService.send(PlayerKeys.PLAYER_MANAGER, PlayerKeys.PLAY_NOW, auxValueText);\n    setIsPreview(true);\n  };\n\n  const handleOpenSuggestionFeedbackModal = () => {\n    setShow(false);\n    setSuggestionFeedbackModal(true);\n    sendReview({\n      text: textPtBr,\n      translation: textGloss,\n      review: auxValueText,\n      rating: 'bad'\n    });\n    setAuxValueText('');\n  };\n\n  const dictionary = useSelector(({\n    dictionaryReducer\n  }) => dictionaryReducer.words);\n  const handleWordSuggestion = useCallback(word => {\n    const text = auxValueText.split(' ');\n    text.pop();\n    const gloss = text.join(' ').concat(` ${word}`); // setTextGloss(gloss, false);\n\n    setAuxValueText(gloss);\n  }, [auxValueText]);\n\n  const renderWord = item => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"revision-modal-word-item\",\n    children: /*#__PURE__*/_jsxDEV(IonChip, {\n      class: \"suggestion-chips\",\n      onClick: () => handleWordSuggestion(item.name),\n      children: item.name\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n\n  useEffect(() => {\n    if (show && !auxValueText) {\n      // Setting TextArea value with the current translator\n      setAuxValueText(textGloss);\n      const searchText = textGloss.split(' ').pop();\n      dispatch(CreatorsDictionary.fetchWords.request({\n        page: 1,\n        limit: 10,\n        name: `${searchText}%`\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [show, dispatch, auxValueText]);\n  useEffect(() => {\n    if (!isPlaying && isPreview) {\n      setShow(true);\n    }\n  }, [isPlaying, isPreview, setShow]);\n  const onSearch = useCallback(event => {\n    setAuxValueText(event.target.value || '');\n    const searchText = (event.target.value || '').split(' ').pop();\n    dispatch(CreatorsDictionary.fetchWords.request({\n      page: FIRST_PAGE_INDEX,\n      limit: 10,\n      name: `${searchText}%`\n    }));\n  }, [dispatch]);\n  const debouncedSearch = debounce(onSearch, TIME_DEBOUNCE_MS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IonModal, {\n      isOpen: show,\n      cssClass: \"revision-modal\",\n      onDidDismiss: () => setShow(false),\n      swipeToClose: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"revision-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"revision-modal-title\",\n            children: \"Revis\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"revision-close-button\",\n          type: \"button\",\n          onClick: handleCloseModal,\n          children: /*#__PURE__*/_jsxDEV(IconCloseCircle, {\n            color: \"#1447A6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-area-container\",\n        children: [/*#__PURE__*/_jsxDEV(IonText, {\n          class: \"text-area-title\",\n          children: Strings.TEXT_AREA_TITLE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IonTextarea, {\n          class: \"text-area\",\n          placeholder: auxValueText,\n          rows: 5,\n          cols: 5,\n          wrap: \"soft\",\n          required: true,\n          onIonChange: debouncedSearch,\n          value: auxValueText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-container\",\n          children: /*#__PURE__*/_jsxDEV(IonText, {\n            className: \"suggestion-text-header\",\n            children: Strings.SUGGESTION_BOX_HEADER\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-chips-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"revision-modal-suggestion-words-list\",\n            children: dictionary.map(item => renderWord(item))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chip-area\",\n          children: [/*#__PURE__*/_jsxDEV(IonChip, {\n            class: \"chip-1\",\n            onClick: handlePlaySuggestionGlosa,\n            children: Strings.CHIP_TEXT_1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonChip, {\n            class: \"chip-2\",\n            onClick: handleOpenSuggestionFeedbackModal,\n            children: Strings.CHIP_TEXT_2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuggestionFeedbackModal, {\n      showSuggestionFeedbackModal: showSuggestionFeedbackModal,\n      setShowSuggestionFeedbackModal: setSuggestionFeedbackModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RevisionModal, \"hOePFszWFFwMBzovh4IbOaLXOSg=\", false, function () {\n  return [useTranslation, useDispatch, useSelector];\n});\n\n_c = RevisionModal;\nexport default RevisionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RevisionModal\");","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/components/RevisionModal/index.tsx"],"names":["React","useCallback","useEffect","useState","IonModal","IonText","IonChip","IonTextarea","debounce","useDispatch","useSelector","IconCloseCircle","SuggestionFeedbackModal","FIRST_PAGE_INDEX","PlayerKeys","useTranslation","sendReview","PlayerService","Creators","CreatorsDictionary","Strings","playerService","getService","TIME_DEBOUNCE_MS","RevisionModal","show","setShow","showSuggestionFeedbackModal","setSuggestionFeedbackModal","isPlaying","textPtBr","textGloss","setTextGloss","auxValueText","setAuxValueText","isPreview","setIsPreview","dispatch","handleCloseModal","handlePlaySuggestionGlosa","send","PLAYER_MANAGER","PLAY_NOW","handleOpenSuggestionFeedbackModal","text","translation","review","rating","dictionary","dictionaryReducer","words","handleWordSuggestion","word","split","pop","gloss","join","concat","renderWord","item","name","searchText","fetchWords","request","page","limit","onSearch","event","target","value","debouncedSearch","width","TEXT_AREA_TITLE","SUGGESTION_BOX_HEADER","map","CHIP_TEXT_1","CHIP_TEXT_2"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport { IonModal, IonText, IonChip, IonTextarea } from '@ionic/react';\nimport { debounce } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { IconCloseCircle } from 'assets';\nimport SuggestionFeedbackModal from 'components/SuggestionFeedbackModal';\nimport { FIRST_PAGE_INDEX } from 'constants/pagination';\nimport { PlayerKeys } from 'constants/player';\nimport { useTranslation } from 'hooks/Translation';\nimport { Words } from 'models/dictionary';\nimport { sendReview } from 'services/suggestionGloss';\nimport PlayerService from 'services/unity';\nimport { RootState } from 'store';\nimport { Creators as CreatorsDictionary } from 'store/ducks/dictionary';\n\nimport { Strings } from './strings';\n\nimport './styles.css';\n\ninterface RevisionModalProps {\n  show: boolean;\n  setShow: any;\n  showSuggestionFeedbackModal: boolean;\n  setSuggestionFeedbackModal: any;\n  isPlaying: boolean;\n}\n\nconst playerService = PlayerService.getService();\nconst TIME_DEBOUNCE_MS = 1000;\n\nconst RevisionModal = ({\n  show,\n  setShow,\n  showSuggestionFeedbackModal,\n  setSuggestionFeedbackModal,\n  isPlaying,\n}: RevisionModalProps) => {\n  const { textPtBr, textGloss, setTextGloss } = useTranslation();\n  // Aux var for the TextArea value\n  const [auxValueText, setAuxValueText] = useState(textGloss);\n  const [isPreview, setIsPreview] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleCloseModal = () => {\n    setShow(false);\n    setIsPreview(false);\n    setAuxValueText('');\n  };\n\n  const handlePlaySuggestionGlosa = () => {\n    setShow(false);\n    // setTextGloss(auxValueText, false);\n    playerService.send(\n      PlayerKeys.PLAYER_MANAGER,\n      PlayerKeys.PLAY_NOW,\n      auxValueText,\n    );\n    setIsPreview(true);\n  };\n\n  const handleOpenSuggestionFeedbackModal = () => {\n    setShow(false);\n    setSuggestionFeedbackModal(true);\n    sendReview({\n      text: textPtBr,\n      translation: textGloss,\n      review: auxValueText,\n      rating: 'bad',\n    });\n    setAuxValueText('');\n  };\n\n  const dictionary = useSelector(\n    ({ dictionaryReducer }: RootState) => dictionaryReducer.words,\n  );\n\n  const handleWordSuggestion = useCallback(\n    (word: string) => {\n      const text = auxValueText.split(' ');\n      text.pop();\n      const gloss = text.join(' ').concat(` ${word}`);\n\n      // setTextGloss(gloss, false);\n      setAuxValueText(gloss);\n    },\n    [auxValueText],\n  );\n\n  const renderWord = (item: Words) => (\n    <div className=\"revision-modal-word-item\">\n      <IonChip\n        class=\"suggestion-chips\"\n        onClick={() => handleWordSuggestion(item.name)}\n        key={item.name}\n      >\n        {item.name}\n      </IonChip>\n    </div>\n  );\n\n  useEffect(() => {\n    if (show && !auxValueText) {\n      // Setting TextArea value with the current translator\n      setAuxValueText(textGloss);\n      const searchText = textGloss.split(' ').pop();\n      dispatch(\n        CreatorsDictionary.fetchWords.request({\n          page: 1,\n          limit: 10,\n          name: `${searchText}%`,\n        }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show, dispatch, auxValueText]);\n\n  useEffect(() => {\n    if (!isPlaying && isPreview) {\n      setShow(true);\n    }\n  }, [isPlaying, isPreview, setShow]);\n\n  const onSearch = useCallback(\n    event => {\n      setAuxValueText(event.target.value || '');\n      const searchText = (event.target.value || '').split(' ').pop();\n      dispatch(\n        CreatorsDictionary.fetchWords.request({\n          page: FIRST_PAGE_INDEX,\n          limit: 10,\n          name: `${searchText}%`,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  const debouncedSearch = debounce(onSearch, TIME_DEBOUNCE_MS);\n\n  return (\n    <div>\n      <IonModal\n        isOpen={show}\n        cssClass=\"revision-modal\"\n        onDidDismiss={() => setShow(false)}\n        swipeToClose\n      >\n        <div className=\"revision-modal-header\">\n          <div style={{ width: 10 }} />\n          <div>\n            <h1 className=\"revision-modal-title\">Revisão</h1>\n          </div>\n          <button\n            className=\"revision-close-button\"\n            type=\"button\"\n            onClick={handleCloseModal}\n          >\n            <IconCloseCircle color=\"#1447A6\" />\n          </button>\n        </div>\n        <div className=\"text-area-container\">\n          <IonText class=\"text-area-title\">{Strings.TEXT_AREA_TITLE}</IonText>\n          <IonTextarea\n            class=\"text-area\"\n            placeholder={auxValueText}\n            rows={5}\n            cols={5}\n            wrap=\"soft\"\n            required\n            onIonChange={debouncedSearch}\n            value={auxValueText}\n          />\n          <div className=\"suggestion-container\">\n            <IonText className=\"suggestion-text-header\">\n              {Strings.SUGGESTION_BOX_HEADER}\n            </IonText>\n          </div>\n          <div className=\"suggestion-chips-box\">\n            <div className=\"revision-modal-suggestion-words-list\">\n              {dictionary.map(item => renderWord(item))}\n            </div>\n          </div>\n          <div className=\"chip-area\">\n            <IonChip class=\"chip-1\" onClick={handlePlaySuggestionGlosa}>\n              {Strings.CHIP_TEXT_1}\n            </IonChip>\n            <IonChip class=\"chip-2\" onClick={handleOpenSuggestionFeedbackModal}>\n              {Strings.CHIP_TEXT_2}\n            </IonChip>\n          </div>\n        </div>\n      </IonModal>\n      <SuggestionFeedbackModal\n        showSuggestionFeedbackModal={showSuggestionFeedbackModal}\n        setShowSuggestionFeedbackModal={setSuggestionFeedbackModal}\n      />\n    </div>\n  );\n};\n\nexport default RevisionModal;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/pages/Dictionary/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { IonChip, IonContent, IonItem, IonList, IonSearchbar, IonText, IonInfiniteScroll, IonInfiniteScrollContent } from '@ionic/react';\nimport { debounce } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport { FIRST_PAGE_INDEX, MAX_PER_PAGE, PAGE_STEP_SIZE } from 'constants/pagination';\nimport paths from 'constants/paths';\nimport { PlayerKeys } from 'constants/player';\nimport { useTranslation } from 'hooks/Translation';\nimport { MenuLayout } from 'layouts';\nimport PlayerService from 'services/unity';\nimport { Creators } from 'store/ducks/dictionary';\nimport { Strings } from './strings';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playerService = PlayerService.getService();\nconst TIME_DEBOUNCE_MS = 1000;\n\nfunction getChipClassName(filter, expected) {\n  return filter === expected ? {\n    color: '#1447a6',\n    background: '#D6E5F9',\n    fontWeight: 'bold'\n  } : {\n    color: '#4b4b4b',\n    background: '#ededed'\n  };\n}\n\nfunction Dictionary() {\n  _s();\n\n  const [searchText, setSearchText] = useState('');\n  const [filter, setFilter] = useState('alphabetical');\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const infiniteScrollRef = useRef(null);\n  const {\n    metadata,\n    words: dictionary\n  } = useSelector(({\n    dictionaryReducer\n  }) => dictionaryReducer);\n  const history = useHistory();\n  const {\n    setTextGloss,\n    recentTranslation\n  } = useTranslation();\n\n  function translate(text) {\n    setTextGloss(text, true);\n    history.replace(paths.HOME);\n    playerService.send(PlayerKeys.PLAYER_MANAGER, PlayerKeys.PLAY_NOW, text);\n  }\n\n  const renderWord = item => /*#__PURE__*/_jsxDEV(IonItem, {\n    class: \"dictionary-word-item\",\n    onClick: () => translate(item.name),\n    children: /*#__PURE__*/_jsxDEV(IonText, {\n      class: \"dictionary-words-style\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n\n  const renderRecents = item => /*#__PURE__*/_jsxDEV(IonItem, {\n    class: \"dictionary-word-item\",\n    onClick: () => translate(item),\n    children: /*#__PURE__*/_jsxDEV(IonText, {\n      class: \"dictionary-words-style\",\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n\n  const onSearch = useCallback(event => {\n    setSearchText(event.target.value || '');\n    dispatch(Creators.fetchWords.request({\n      page: FIRST_PAGE_INDEX,\n      limit: MAX_PER_PAGE,\n      name: `${event.target.value}%`\n    }));\n  }, [dispatch]);\n  const debouncedSearch = debounce(onSearch, TIME_DEBOUNCE_MS);\n  useEffect(() => {\n    dispatch(Creators.fetchWords.request({\n      page: FIRST_PAGE_INDEX,\n      limit: MAX_PER_PAGE\n    }));\n  }, [dispatch]);\n  const fetchWords = useCallback(() => {\n    var _infiniteScrollRef$cu;\n\n    dispatch(Creators.fetchWords.request({\n      page: metadata.current_page + PAGE_STEP_SIZE,\n      limit: MAX_PER_PAGE,\n      name: `${searchText}%`\n    }));\n    (_infiniteScrollRef$cu = infiniteScrollRef.current) === null || _infiniteScrollRef$cu === void 0 ? void 0 : _infiniteScrollRef$cu.complete();\n  }, [dispatch, infiniteScrollRef, metadata, searchText]);\n\n  function handleFilterAlpha() {\n    setFilter('alphabetical');\n  }\n\n  function handleFilterRecents() {\n    setFilter('recents');\n  }\n\n  return /*#__PURE__*/_jsxDEV(MenuLayout, {\n    title: Strings.TOOLBAR_TITLE,\n    mode: location.pathname === paths.DICTIONARY ? 'menu' : 'back',\n    children: /*#__PURE__*/_jsxDEV(IonContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-box\",\n          children: /*#__PURE__*/_jsxDEV(IonSearchbar, {\n            className: \"dictionary-textarea\",\n            placeholder: Strings.TEXT_PLACEHOLDER,\n            onIonChange: debouncedSearch,\n            inputmode: \"text\",\n            searchIcon: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-container-ion-chips\",\n          children: [/*#__PURE__*/_jsxDEV(IonChip, {\n            class: \"dictionary-container-ion-chips-suggestions\",\n            onClick: handleFilterAlpha,\n            style: getChipClassName(filter, 'alphabetical'),\n            children: Strings.CHIP_TEXT_SUGGESTIONS_1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IonChip, {\n            class: \"dictionary-container-ion-chips-suggestions\",\n            onClick: handleFilterRecents,\n            style: getChipClassName(filter, 'recents'),\n            children: Strings.CHIP_TEXT_SUGGESTIONS_2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-words-container\",\n          children: /*#__PURE__*/_jsxDEV(IonList, {\n            lines: \"none\",\n            class: \"dictionary-words-list\",\n            children: filter === 'alphabetical' ? dictionary.map(item => renderWord(item)) : recentTranslation.filter(item => item.includes(searchText.toUpperCase())).map(item => renderRecents(item))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonInfiniteScroll, {\n        ref: infiniteScrollRef,\n        threshold: \"100px\",\n        onIonInfinite: fetchWords,\n        children: /*#__PURE__*/_jsxDEV(IonInfiniteScrollContent, {\n          loadingSpinner: \"bubbles\",\n          loadingText: \"Carregando sinais...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dictionary, \"aN5WzRgTnqQURt8mP2uA5s7JVF4=\", false, function () {\n  return [useLocation, useDispatch, useSelector, useHistory, useTranslation];\n});\n\n_c = Dictionary;\nexport default Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/home/caionnc/Documents/code/tcc-branches/v1.0.2/tcc/src/pages/Dictionary/index.tsx"],"names":["React","useCallback","useEffect","useRef","useState","IonChip","IonContent","IonItem","IonList","IonSearchbar","IonText","IonInfiniteScroll","IonInfiniteScrollContent","debounce","useDispatch","useSelector","useHistory","useLocation","FIRST_PAGE_INDEX","MAX_PER_PAGE","PAGE_STEP_SIZE","paths","PlayerKeys","useTranslation","MenuLayout","PlayerService","Creators","Strings","playerService","getService","TIME_DEBOUNCE_MS","getChipClassName","filter","expected","color","background","fontWeight","Dictionary","searchText","setSearchText","setFilter","location","dispatch","infiniteScrollRef","metadata","words","dictionary","dictionaryReducer","history","setTextGloss","recentTranslation","translate","text","replace","HOME","send","PLAYER_MANAGER","PLAY_NOW","renderWord","item","name","id","renderRecents","onSearch","event","target","value","fetchWords","request","page","limit","debouncedSearch","current_page","current","complete","handleFilterAlpha","handleFilterRecents","TOOLBAR_TITLE","pathname","DICTIONARY","TEXT_PLACEHOLDER","CHIP_TEXT_SUGGESTIONS_1","CHIP_TEXT_SUGGESTIONS_2","map","includes","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,QAAhD,QAAgE,OAAhE;AAEA,SACEC,OADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,YALF,EAMEC,OANF,EAOEC,iBAPF,EAQEC,wBARF,QASO,cATP;AAUA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AAEA,SACEC,gBADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,sBAJP;AAKA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,cAAP;;AAIA,MAAMC,aAAa,GAAGH,aAAa,CAACI,UAAd,EAAtB;AAEA,MAAMC,gBAAgB,GAAG,IAAzB;;AAEA,SAASC,gBAAT,CACEC,MADF,EAEEC,QAFF,EAGE;AACA,SAAOD,MAAM,KAAKC,QAAX,GACH;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,UAAU,EAAE,SAAhC;AAA2CC,IAAAA,UAAU,EAAE;AAAvD,GADG,GAEH;AAAEF,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,UAAU,EAAE;AAAhC,GAFJ;AAGD;;AAED,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC4B,MAAD,EAASQ,SAAT,IAAsBpC,QAAQ,CAAmB,cAAnB,CAApC;AACA,QAAMqC,QAAQ,GAAGxB,WAAW,EAA5B;AAEA,QAAMyB,QAAQ,GAAG5B,WAAW,EAA5B;AAEA,QAAM6B,iBAAiB,GAAGxC,MAAM,CAA+B,IAA/B,CAAhC;AAEA,QAAM;AAAEyC,IAAAA,QAAF;AAAYC,IAAAA,KAAK,EAAEC;AAAnB,MAAkC/B,WAAW,CACjD,CAAC;AAAEgC,IAAAA;AAAF,GAAD,KAAsCA,iBADW,CAAnD;AAIA,QAAMC,OAAO,GAAGhC,UAAU,EAA1B;AAEA,QAAM;AAAEiC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAsC3B,cAAc,EAA1D;;AAEA,WAAS4B,SAAT,CAAmBC,IAAnB,EAAiC;AAC/BH,IAAAA,YAAY,CAACG,IAAD,EAAO,IAAP,CAAZ;AACAJ,IAAAA,OAAO,CAACK,OAAR,CAAgBhC,KAAK,CAACiC,IAAtB;AACA1B,IAAAA,aAAa,CAAC2B,IAAd,CAAmBjC,UAAU,CAACkC,cAA9B,EAA8ClC,UAAU,CAACmC,QAAzD,EAAmEL,IAAnE;AACD;;AAED,QAAMM,UAAU,GAAIC,IAAD,iBACjB,QAAC,OAAD;AAEE,IAAA,KAAK,EAAC,sBAFR;AAGE,IAAA,OAAO,EAAE,MAAMR,SAAS,CAACQ,IAAI,CAACC,IAAN,CAH1B;AAAA,2BAKE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,wBAAf;AAAA,gBAAyCD,IAAI,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA;AALF,KACOD,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,QAAMC,aAAa,GAAIH,IAAD,iBACpB,QAAC,OAAD;AAEE,IAAA,KAAK,EAAC,sBAFR;AAGE,IAAA,OAAO,EAAE,MAAMR,SAAS,CAACQ,IAAD,CAH1B;AAAA,2BAKE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,wBAAf;AAAA,gBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA;AALF,KACOA,IADP;AAAA;AAAA;AAAA;AAAA,UADF;;AAUA,QAAMI,QAAQ,GAAG9D,WAAW,CAC1B+D,KAAK,IAAI;AACPzB,IAAAA,aAAa,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,EAAvB,CAAb;AACAxB,IAAAA,QAAQ,CACNhB,QAAQ,CAACyC,UAAT,CAAoBC,OAApB,CAA4B;AAC1BC,MAAAA,IAAI,EAAEnD,gBADoB;AAE1BoD,MAAAA,KAAK,EAAEnD,YAFmB;AAG1ByC,MAAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,MAAN,CAAaC,KAAM;AAHF,KAA5B,CADM,CAAR;AAOD,GAVyB,EAW1B,CAACxB,QAAD,CAX0B,CAA5B;AAcA,QAAM6B,eAAe,GAAG1D,QAAQ,CAACkD,QAAD,EAAWjC,gBAAX,CAAhC;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,QAAQ,CACNhB,QAAQ,CAACyC,UAAT,CAAoBC,OAApB,CAA4B;AAC1BC,MAAAA,IAAI,EAAEnD,gBADoB;AAE1BoD,MAAAA,KAAK,EAAEnD;AAFmB,KAA5B,CADM,CAAR;AAMD,GAPQ,EAON,CAACuB,QAAD,CAPM,CAAT;AASA,QAAMyB,UAAU,GAAGlE,WAAW,CAAC,MAAM;AAAA;;AACnCyC,IAAAA,QAAQ,CACNhB,QAAQ,CAACyC,UAAT,CAAoBC,OAApB,CAA4B;AAC1BC,MAAAA,IAAI,EAAEzB,QAAQ,CAAC4B,YAAT,GAAwBpD,cADJ;AAE1BkD,MAAAA,KAAK,EAAEnD,YAFmB;AAG1ByC,MAAAA,IAAI,EAAG,GAAEtB,UAAW;AAHM,KAA5B,CADM,CAAR;AAOA,6BAAAK,iBAAiB,CAAC8B,OAAlB,gFAA2BC,QAA3B;AACD,GAT6B,EAS3B,CAAChC,QAAD,EAAWC,iBAAX,EAA8BC,QAA9B,EAAwCN,UAAxC,CAT2B,CAA9B;;AAWA,WAASqC,iBAAT,GAA6B;AAC3BnC,IAAAA,SAAS,CAAC,cAAD,CAAT;AACD;;AAED,WAASoC,mBAAT,GAA+B;AAC7BpC,IAAAA,SAAS,CAAC,SAAD,CAAT;AACD;;AAED,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEb,OAAO,CAACkD,aADjB;AAEE,IAAA,IAAI,EAAEpC,QAAQ,CAACqC,QAAT,KAAsBzD,KAAK,CAAC0D,UAA5B,GAAyC,MAAzC,GAAkD,MAF1D;AAAA,2BAIE,QAAC,UAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,YAAD;AACE,YAAA,SAAS,EAAC,qBADZ;AAEE,YAAA,WAAW,EAAEpD,OAAO,CAACqD,gBAFvB;AAGE,YAAA,WAAW,EAAET,eAHf;AAIE,YAAA,SAAS,EAAC,MAJZ;AAKE,YAAA,UAAU,EAAC;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,kCACE,QAAC,OAAD;AACE,YAAA,KAAK,EAAC,4CADR;AAEE,YAAA,OAAO,EAAEI,iBAFX;AAGE,YAAA,KAAK,EAAE5C,gBAAgB,CAACC,MAAD,EAAS,cAAT,CAHzB;AAAA,sBAKGL,OAAO,CAACsD;AALX;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,OAAD;AACE,YAAA,KAAK,EAAC,4CADR;AAEE,YAAA,OAAO,EAAEL,mBAFX;AAGE,YAAA,KAAK,EAAE7C,gBAAgB,CAACC,MAAD,EAAS,SAAT,CAHzB;AAAA,sBAKGL,OAAO,CAACuD;AALX;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eA0BE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAC,uBAA5B;AAAA,sBACGlD,MAAM,KAAK,cAAX,GACGc,UAAU,CAACqC,GAAX,CAAexB,IAAI,IAAID,UAAU,CAACC,IAAD,CAAjC,CADH,GAEGT,iBAAiB,CACdlB,MADH,CACU2B,IAAI,IAAIA,IAAI,CAACyB,QAAL,CAAc9C,UAAU,CAAC+C,WAAX,EAAd,CADlB,EAEGF,GAFH,CAEOxB,IAAI,IAAIG,aAAa,CAACH,IAAD,CAF5B;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqCE,QAAC,iBAAD;AACE,QAAA,GAAG,EAAEhB,iBADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,aAAa,EAAEwB,UAHjB;AAAA,+BAKE,QAAC,wBAAD;AACE,UAAA,cAAc,EAAC,SADjB;AAEE,UAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GA9IQ9B,U;UAGUpB,W,EAEAH,W,EAIuBC,W,EAIxBC,U,EAE4BO,c;;;KAfrCc,U;AAgJT,eAAeA,UAAf","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport {\n  IonChip,\n  IonContent,\n  IonItem,\n  IonList,\n  IonSearchbar,\n  IonText,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n} from '@ionic/react';\nimport { debounce } from 'lodash';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\n\nimport {\n  FIRST_PAGE_INDEX,\n  MAX_PER_PAGE,\n  PAGE_STEP_SIZE,\n} from 'constants/pagination';\nimport paths from 'constants/paths';\nimport { PlayerKeys } from 'constants/player';\nimport { useTranslation } from 'hooks/Translation';\nimport { MenuLayout } from 'layouts';\nimport { Words } from 'models/dictionary';\nimport PlayerService from 'services/unity';\nimport { RootState } from 'store';\nimport { Creators } from 'store/ducks/dictionary';\n\nimport { Strings } from './strings';\n\nimport './styles.css';\n\ntype DictionaryFilter = 'alphabetical' | 'recents';\n\nconst playerService = PlayerService.getService();\n\nconst TIME_DEBOUNCE_MS = 1000;\n\nfunction getChipClassName(\n  filter: DictionaryFilter,\n  expected: DictionaryFilter,\n) {\n  return filter === expected\n    ? { color: '#1447a6', background: '#D6E5F9', fontWeight: 'bold' }\n    : { color: '#4b4b4b', background: '#ededed' };\n}\n\nfunction Dictionary() {\n  const [searchText, setSearchText] = useState('');\n  const [filter, setFilter] = useState<DictionaryFilter>('alphabetical');\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const infiniteScrollRef = useRef<HTMLIonInfiniteScrollElement>(null);\n\n  const { metadata, words: dictionary } = useSelector(\n    ({ dictionaryReducer }: RootState) => dictionaryReducer,\n  );\n\n  const history = useHistory();\n\n  const { setTextGloss, recentTranslation } = useTranslation();\n\n  function translate(text: string) {\n    setTextGloss(text, true);\n    history.replace(paths.HOME);\n    playerService.send(PlayerKeys.PLAYER_MANAGER, PlayerKeys.PLAY_NOW, text);\n  }\n\n  const renderWord = (item: Words) => (\n    <IonItem\n      key={item.id}\n      class=\"dictionary-word-item\"\n      onClick={() => translate(item.name)}\n    >\n      <IonText class=\"dictionary-words-style\">{item.name}</IonText>\n    </IonItem>\n  );\n\n  const renderRecents = (item: string) => (\n    <IonItem\n      key={item}\n      class=\"dictionary-word-item\"\n      onClick={() => translate(item)}\n    >\n      <IonText class=\"dictionary-words-style\">{item}</IonText>\n    </IonItem>\n  );\n\n  const onSearch = useCallback(\n    event => {\n      setSearchText(event.target.value || '');\n      dispatch(\n        Creators.fetchWords.request({\n          page: FIRST_PAGE_INDEX,\n          limit: MAX_PER_PAGE,\n          name: `${event.target.value}%`,\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  const debouncedSearch = debounce(onSearch, TIME_DEBOUNCE_MS);\n\n  useEffect(() => {\n    dispatch(\n      Creators.fetchWords.request({\n        page: FIRST_PAGE_INDEX,\n        limit: MAX_PER_PAGE,\n      }),\n    );\n  }, [dispatch]);\n\n  const fetchWords = useCallback(() => {\n    dispatch(\n      Creators.fetchWords.request({\n        page: metadata.current_page + PAGE_STEP_SIZE,\n        limit: MAX_PER_PAGE,\n        name: `${searchText}%`,\n      }),\n    );\n    infiniteScrollRef.current?.complete();\n  }, [dispatch, infiniteScrollRef, metadata, searchText]);\n\n  function handleFilterAlpha() {\n    setFilter('alphabetical');\n  }\n\n  function handleFilterRecents() {\n    setFilter('recents');\n  }\n\n  return (\n    <MenuLayout\n      title={Strings.TOOLBAR_TITLE}\n      mode={location.pathname === paths.DICTIONARY ? 'menu' : 'back'}\n    >\n      <IonContent>\n        <div className=\"dictionary-container\">\n          <div className=\"dictionary-box\">\n            <IonSearchbar\n              className=\"dictionary-textarea\"\n              placeholder={Strings.TEXT_PLACEHOLDER}\n              onIonChange={debouncedSearch}\n              inputmode=\"text\"\n              searchIcon=\"none\"\n            />\n          </div>\n          <div className=\"dictionary-container-ion-chips\">\n            <IonChip\n              class=\"dictionary-container-ion-chips-suggestions\"\n              onClick={handleFilterAlpha}\n              style={getChipClassName(filter, 'alphabetical')}\n            >\n              {Strings.CHIP_TEXT_SUGGESTIONS_1}\n            </IonChip>\n            <IonChip\n              class=\"dictionary-container-ion-chips-suggestions\"\n              onClick={handleFilterRecents}\n              style={getChipClassName(filter, 'recents')}\n            >\n              {Strings.CHIP_TEXT_SUGGESTIONS_2}\n            </IonChip>\n          </div>\n          <div className=\"dictionary-words-container\">\n            <IonList lines=\"none\" class=\"dictionary-words-list\">\n              {filter === 'alphabetical'\n                ? dictionary.map(item => renderWord(item))\n                : recentTranslation\n                    .filter(item => item.includes(searchText.toUpperCase()))\n                    .map(item => renderRecents(item))}\n            </IonList>\n          </div>\n        </div>\n        <IonInfiniteScroll\n          ref={infiniteScrollRef}\n          threshold=\"100px\"\n          onIonInfinite={fetchWords}\n        >\n          <IonInfiniteScrollContent\n            loadingSpinner=\"bubbles\"\n            loadingText=\"Carregando sinais...\"\n          />\n        </IonInfiniteScroll>\n      </IonContent>\n    </MenuLayout>\n  );\n}\n\nexport default Dictionary;\n"]},"metadata":{},"sourceType":"module"}
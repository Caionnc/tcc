{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport produce from 'immer';\nimport { createAction } from 'typesafe-actions';\nexport const Types = {\n  SET_TRANSLATOR_TEXT: '@translator/SET_CURRENT_TRANSLATOR_TEXT'\n};\nconst INITIAL_STATE = {\n  translatorText: ''\n};\nexport const Creators = {\n  setTranslatorText: createAction(Types.SET_TRANSLATOR_TEXT)()\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  const {\n    payload,\n    type\n  } = action;\n  return produce(state, draft => {\n    switch (type) {\n      case Types.SET_TRANSLATOR_TEXT:\n        draft.translatorText = payload;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/caionnc/Documents/CC_UFPB/TCC/github-tcc/tcc/src/store/ducks/translator.ts"],"names":["produce","createAction","Types","SET_TRANSLATOR_TEXT","INITIAL_STATE","translatorText","Creators","setTranslatorText","reducer","state","action","payload","type","draft"],"mappings":"AAAA;AAGA,OAAOA,OAAP,MAA+B,OAA/B;AAEA,SAASC,YAAT,QAAyC,kBAAzC;AAIA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,mBAAmB,EAAE;AADF,CAAd;AAQP,MAAMC,aAAkC,GAAG;AACzCC,EAAAA,cAAc,EAAE;AADyB,CAA3C;AAIA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,iBAAiB,EAAEN,YAAY,CAACC,KAAK,CAACC,mBAAP,CAAZ;AADG,CAAjB;;AAMP,MAAMK,OAAkD,GAAG,CACzDC,KAAK,GAAGL,aADiD,EAEzDM,MAFyD,KAGtD;AACH,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;AACA,SAAOV,OAAO,CAACS,KAAD,EAASI,KAAD,IAAuC;AAC3D,YAAQD,IAAR;AACE,WAAKV,KAAK,CAACC,mBAAX;AACEU,QAAAA,KAAK,CAACR,cAAN,GAAuBM,OAAvB;AACA;;AAEF;AACE;AANJ;AAQD,GATa,CAAd;AAUD,CAfD;;AAiBA,eAAeH,OAAf","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { useState } from 'react';\n\nimport produce, { Draft } from 'immer';\nimport { Reducer } from 'redux';\nimport { createAction, ActionType } from 'typesafe-actions';\n\nimport { Words } from 'models/dictionary';\n\nexport const Types = {\n  SET_TRANSLATOR_TEXT: '@translator/SET_CURRENT_TRANSLATOR_TEXT',\n};\n\nexport interface TranslatorTextState {\n  translatorText: string;\n}\n\nconst INITIAL_STATE: TranslatorTextState = {\n  translatorText: '',\n};\n\nexport const Creators = {\n  setTranslatorText: createAction(Types.SET_TRANSLATOR_TEXT)<string>(),\n};\n\nexport type ActionTypes = ActionType<typeof Creators>;\n\nconst reducer: Reducer<TranslatorTextState, ActionTypes> = (\n  state = INITIAL_STATE,\n  action: ActionTypes,\n) => {\n  const { payload, type } = action;\n  return produce(state, (draft: Draft<TranslatorTextState>) => {\n    switch (type) {\n      case Types.SET_TRANSLATOR_TEXT:\n        draft.translatorText = payload;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}